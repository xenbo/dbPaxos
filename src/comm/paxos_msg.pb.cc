// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: paxos_msg.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "paxos_msg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace phxpaxos {
class HeaderDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Header> {
} _Header_default_instance_;
class PaxosMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PaxosMsg> {
} _PaxosMsg_default_instance_;
class CheckpointMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CheckpointMsg> {
} _CheckpointMsg_default_instance_;
class AcceptorStateDataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AcceptorStateData> {
} _AcceptorStateData_default_instance_;
class PaxosNodeInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PaxosNodeInfo> {
} _PaxosNodeInfo_default_instance_;
class SystemVariablesDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SystemVariables> {
} _SystemVariables_default_instance_;
class MasterVariablesDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MasterVariables> {
} _MasterVariables_default_instance_;
class PaxosValueDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PaxosValue> {
} _PaxosValue_default_instance_;
class BatchPaxosValuesDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BatchPaxosValues> {
} _BatchPaxosValues_default_instance_;

namespace protobuf_paxos_5fmsg_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[9];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Header, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Header, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Header, gid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Header, rid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Header, cmdid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Header, version_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMsg, msgtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMsg, instanceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMsg, nodeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMsg, proposalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMsg, proposalnodeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMsg, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMsg, preacceptid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMsg, preacceptnodeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMsg, rejectbypromiseid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMsg, nowinstanceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMsg, minchoseninstanceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMsg, lastchecksum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMsg, flag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMsg, systemvariables_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosMsg, mastervariables_),
  7,
  3,
  4,
  5,
  6,
  0,
  9,
  10,
  11,
  12,
  13,
  8,
  14,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointMsg, msgtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointMsg, nodeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointMsg, flag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointMsg, uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointMsg, sequence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointMsg, checkpointinstanceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointMsg, checksum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointMsg, filepath_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointMsg, smid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointMsg, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckpointMsg, buffer_),
  3,
  2,
  4,
  5,
  6,
  7,
  8,
  0,
  9,
  10,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptorStateData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptorStateData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptorStateData, instanceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptorStateData, promiseid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptorStateData, promisenodeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptorStateData, acceptedid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptorStateData, acceptednodeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptorStateData, acceptedvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AcceptorStateData, checksum_),
  1,
  2,
  3,
  4,
  5,
  0,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosNodeInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosNodeInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosNodeInfo, rid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosNodeInfo, nodeid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemVariables, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemVariables, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemVariables, gid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemVariables, membership_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemVariables, version_),
  0,
  ~0u,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MasterVariables, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MasterVariables, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MasterVariables, masternodeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MasterVariables, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MasterVariables, leasetime_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosValue, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosValue, smid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PaxosValue, value_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchPaxosValues, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchPaxosValues, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchPaxosValues, values_),
  ~0u,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 8, sizeof(Header)},
  { 12, 31, sizeof(PaxosMsg)},
  { 46, 61, sizeof(CheckpointMsg)},
  { 72, 83, sizeof(AcceptorStateData)},
  { 90, 96, sizeof(PaxosNodeInfo)},
  { 98, 105, sizeof(SystemVariables)},
  { 108, 115, sizeof(MasterVariables)},
  { 118, 124, sizeof(PaxosValue)},
  { 126, 131, sizeof(BatchPaxosValues)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Header_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PaxosMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CheckpointMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AcceptorStateData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PaxosNodeInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SystemVariables_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MasterVariables_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PaxosValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BatchPaxosValues_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "paxos_msg.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

}  // namespace

void TableStruct::Shutdown() {
  _Header_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _PaxosMsg_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _CheckpointMsg_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _AcceptorStateData_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _PaxosNodeInfo_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _SystemVariables_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _MasterVariables_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _PaxosValue_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _BatchPaxosValues_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Header_default_instance_.DefaultConstruct();
  _PaxosMsg_default_instance_.DefaultConstruct();
  _CheckpointMsg_default_instance_.DefaultConstruct();
  _AcceptorStateData_default_instance_.DefaultConstruct();
  _PaxosNodeInfo_default_instance_.DefaultConstruct();
  _SystemVariables_default_instance_.DefaultConstruct();
  _MasterVariables_default_instance_.DefaultConstruct();
  _PaxosValue_default_instance_.DefaultConstruct();
  _BatchPaxosValues_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\017paxos_msg.proto\022\010phxpaxos\"B\n\006Header\022\013\n"
      "\003gid\030\001 \002(\004\022\013\n\003rid\030\002 \002(\004\022\r\n\005cmdid\030\003 \002(\005\022\017"
      "\n\007version\030\004 \001(\005\"\315\002\n\010PaxosMsg\022\017\n\007MsgType\030"
      "\001 \002(\005\022\022\n\nInstanceID\030\002 \001(\004\022\016\n\006NodeID\030\003 \001("
      "\004\022\022\n\nProposalID\030\004 \001(\004\022\026\n\016ProposalNodeID\030"
      "\005 \001(\004\022\r\n\005Value\030\006 \001(\014\022\023\n\013PreAcceptID\030\007 \001("
      "\004\022\027\n\017PreAcceptNodeID\030\010 \001(\004\022\031\n\021RejectByPr"
      "omiseID\030\t \001(\004\022\025\n\rNowInstanceID\030\n \001(\004\022\033\n\023"
      "MinChosenInstanceID\030\013 \001(\004\022\024\n\014LastChecksu"
      "m\030\014 \001(\r\022\014\n\004Flag\030\r \001(\r\022\027\n\017SystemVariables"
      "\030\016 \001(\014\022\027\n\017MasterVariables\030\017 \001(\014\"\316\001\n\rChec"
      "kpointMsg\022\017\n\007MsgType\030\001 \002(\005\022\016\n\006NodeID\030\002 \002"
      "(\004\022\014\n\004Flag\030\003 \001(\005\022\014\n\004UUID\030\004 \002(\004\022\020\n\010Sequen"
      "ce\030\005 \002(\004\022\034\n\024CheckpointInstanceID\030\006 \001(\004\022\020"
      "\n\010Checksum\030\007 \001(\r\022\020\n\010FilePath\030\010 \001(\t\022\014\n\004SM"
      "ID\030\t \001(\005\022\016\n\006Offset\030\n \001(\004\022\016\n\006Buffer\030\013 \001(\014"
      "\"\246\001\n\021AcceptorStateData\022\022\n\nInstanceID\030\001 \002"
      "(\004\022\021\n\tPromiseID\030\002 \002(\004\022\025\n\rPromiseNodeID\030\003"
      " \002(\004\022\022\n\nAcceptedID\030\004 \002(\004\022\026\n\016AcceptedNode"
      "ID\030\005 \002(\004\022\025\n\rAcceptedValue\030\006 \002(\014\022\020\n\010Check"
      "sum\030\007 \002(\r\",\n\rPaxosNodeInfo\022\013\n\003Rid\030\001 \002(\004\022"
      "\016\n\006Nodeid\030\002 \002(\004\"\\\n\017SystemVariables\022\013\n\003Gi"
      "d\030\001 \002(\004\022+\n\nMemberShip\030\002 \003(\0132\027.phxpaxos.P"
      "axosNodeInfo\022\017\n\007Version\030\003 \002(\004\"K\n\017MasterV"
      "ariables\022\024\n\014MasterNodeid\030\001 \002(\004\022\017\n\007Versio"
      "n\030\002 \002(\004\022\021\n\tLeaseTime\030\003 \002(\r\")\n\nPaxosValue"
      "\022\014\n\004SMID\030\001 \002(\005\022\r\n\005Value\030\002 \002(\014\"8\n\020BatchPa"
      "xosValues\022$\n\006Values\030\001 \003(\0132\024.phxpaxos.Pax"
      "osValue"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1127);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "paxos_msg.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_paxos_5fmsg_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Header::kGidFieldNumber;
const int Header::kRidFieldNumber;
const int Header::kCmdidFieldNumber;
const int Header::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Header::Header()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_paxos_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:phxpaxos.Header)
}
Header::Header(const Header& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&gid_, &from.gid_,
    reinterpret_cast<char*>(&version_) -
    reinterpret_cast<char*>(&gid_) + sizeof(version_));
  // @@protoc_insertion_point(copy_constructor:phxpaxos.Header)
}

void Header::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&gid_, 0, reinterpret_cast<char*>(&version_) -
    reinterpret_cast<char*>(&gid_) + sizeof(version_));
}

Header::~Header() {
  // @@protoc_insertion_point(destructor:phxpaxos.Header)
  SharedDtor();
}

void Header::SharedDtor() {
}

void Header::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Header::descriptor() {
  protobuf_paxos_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_paxos_5fmsg_2eproto::file_level_metadata[0].descriptor;
}

const Header& Header::default_instance() {
  protobuf_paxos_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

Header* Header::New(::google::protobuf::Arena* arena) const {
  Header* n = new Header;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Header::Clear() {
// @@protoc_insertion_point(message_clear_start:phxpaxos.Header)
  if (_has_bits_[0 / 32] & 15u) {
    ::memset(&gid_, 0, reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&gid_) + sizeof(version_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Header::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:phxpaxos.Header)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 gid = 1;
      case 1: {
        if (tag == 8u) {
          set_has_gid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 rid = 2;
      case 2: {
        if (tag == 16u) {
          set_has_rid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 cmdid = 3;
      case 3: {
        if (tag == 24u) {
          set_has_cmdid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cmdid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 version = 4;
      case 4: {
        if (tag == 32u) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phxpaxos.Header)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phxpaxos.Header)
  return false;
#undef DO_
}

void Header::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phxpaxos.Header)
  // required uint64 gid = 1;
  if (has_gid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->gid(), output);
  }

  // required uint64 rid = 2;
  if (has_rid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->rid(), output);
  }

  // required int32 cmdid = 3;
  if (has_cmdid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->cmdid(), output);
  }

  // optional int32 version = 4;
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->version(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:phxpaxos.Header)
}

::google::protobuf::uint8* Header::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:phxpaxos.Header)
  // required uint64 gid = 1;
  if (has_gid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->gid(), target);
  }

  // required uint64 rid = 2;
  if (has_rid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->rid(), target);
  }

  // required int32 cmdid = 3;
  if (has_cmdid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->cmdid(), target);
  }

  // optional int32 version = 4;
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->version(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:phxpaxos.Header)
  return target;
}

size_t Header::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:phxpaxos.Header)
  size_t total_size = 0;

  if (has_gid()) {
    // required uint64 gid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gid());
  }

  if (has_rid()) {
    // required uint64 rid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->rid());
  }

  if (has_cmdid()) {
    // required int32 cmdid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cmdid());
  }

  return total_size;
}
size_t Header::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:phxpaxos.Header)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required uint64 gid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gid());

    // required uint64 rid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->rid());

    // required int32 cmdid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cmdid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional int32 version = 4;
  if (has_version()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Header::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:phxpaxos.Header)
  GOOGLE_DCHECK_NE(&from, this);
  const Header* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Header>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:phxpaxos.Header)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:phxpaxos.Header)
    MergeFrom(*source);
  }
}

void Header::MergeFrom(const Header& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phxpaxos.Header)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 15u) {
    if (from.has_gid()) {
      set_gid(from.gid());
    }
    if (from.has_rid()) {
      set_rid(from.rid());
    }
    if (from.has_cmdid()) {
      set_cmdid(from.cmdid());
    }
    if (from.has_version()) {
      set_version(from.version());
    }
  }
}

void Header::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:phxpaxos.Header)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Header::CopyFrom(const Header& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phxpaxos.Header)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Header::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void Header::Swap(Header* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Header::InternalSwap(Header* other) {
  std::swap(gid_, other->gid_);
  std::swap(rid_, other->rid_);
  std::swap(cmdid_, other->cmdid_);
  std::swap(version_, other->version_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Header::GetMetadata() const {
  protobuf_paxos_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_paxos_5fmsg_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Header

// required uint64 gid = 1;
bool Header::has_gid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Header::set_has_gid() {
  _has_bits_[0] |= 0x00000001u;
}
void Header::clear_has_gid() {
  _has_bits_[0] &= ~0x00000001u;
}
void Header::clear_gid() {
  gid_ = GOOGLE_ULONGLONG(0);
  clear_has_gid();
}
::google::protobuf::uint64 Header::gid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.Header.gid)
  return gid_;
}
void Header::set_gid(::google::protobuf::uint64 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.Header.gid)
}

// required uint64 rid = 2;
bool Header::has_rid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Header::set_has_rid() {
  _has_bits_[0] |= 0x00000002u;
}
void Header::clear_has_rid() {
  _has_bits_[0] &= ~0x00000002u;
}
void Header::clear_rid() {
  rid_ = GOOGLE_ULONGLONG(0);
  clear_has_rid();
}
::google::protobuf::uint64 Header::rid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.Header.rid)
  return rid_;
}
void Header::set_rid(::google::protobuf::uint64 value) {
  set_has_rid();
  rid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.Header.rid)
}

// required int32 cmdid = 3;
bool Header::has_cmdid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Header::set_has_cmdid() {
  _has_bits_[0] |= 0x00000004u;
}
void Header::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000004u;
}
void Header::clear_cmdid() {
  cmdid_ = 0;
  clear_has_cmdid();
}
::google::protobuf::int32 Header::cmdid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.Header.cmdid)
  return cmdid_;
}
void Header::set_cmdid(::google::protobuf::int32 value) {
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.Header.cmdid)
}

// optional int32 version = 4;
bool Header::has_version() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Header::set_has_version() {
  _has_bits_[0] |= 0x00000008u;
}
void Header::clear_has_version() {
  _has_bits_[0] &= ~0x00000008u;
}
void Header::clear_version() {
  version_ = 0;
  clear_has_version();
}
::google::protobuf::int32 Header::version() const {
  // @@protoc_insertion_point(field_get:phxpaxos.Header.version)
  return version_;
}
void Header::set_version(::google::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.Header.version)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PaxosMsg::kMsgTypeFieldNumber;
const int PaxosMsg::kInstanceIDFieldNumber;
const int PaxosMsg::kNodeIDFieldNumber;
const int PaxosMsg::kProposalIDFieldNumber;
const int PaxosMsg::kProposalNodeIDFieldNumber;
const int PaxosMsg::kValueFieldNumber;
const int PaxosMsg::kPreAcceptIDFieldNumber;
const int PaxosMsg::kPreAcceptNodeIDFieldNumber;
const int PaxosMsg::kRejectByPromiseIDFieldNumber;
const int PaxosMsg::kNowInstanceIDFieldNumber;
const int PaxosMsg::kMinChosenInstanceIDFieldNumber;
const int PaxosMsg::kLastChecksumFieldNumber;
const int PaxosMsg::kFlagFieldNumber;
const int PaxosMsg::kSystemVariablesFieldNumber;
const int PaxosMsg::kMasterVariablesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PaxosMsg::PaxosMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_paxos_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:phxpaxos.PaxosMsg)
}
PaxosMsg::PaxosMsg(const PaxosMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  systemvariables_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_systemvariables()) {
    systemvariables_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.systemvariables_);
  }
  mastervariables_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mastervariables()) {
    mastervariables_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mastervariables_);
  }
  ::memcpy(&instanceid_, &from.instanceid_,
    reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&instanceid_) + sizeof(flag_));
  // @@protoc_insertion_point(copy_constructor:phxpaxos.PaxosMsg)
}

void PaxosMsg::SharedCtor() {
  _cached_size_ = 0;
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  systemvariables_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mastervariables_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&instanceid_, 0, reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&instanceid_) + sizeof(flag_));
}

PaxosMsg::~PaxosMsg() {
  // @@protoc_insertion_point(destructor:phxpaxos.PaxosMsg)
  SharedDtor();
}

void PaxosMsg::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  systemvariables_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mastervariables_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PaxosMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PaxosMsg::descriptor() {
  protobuf_paxos_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_paxos_5fmsg_2eproto::file_level_metadata[1].descriptor;
}

const PaxosMsg& PaxosMsg::default_instance() {
  protobuf_paxos_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PaxosMsg* PaxosMsg::New(::google::protobuf::Arena* arena) const {
  PaxosMsg* n = new PaxosMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PaxosMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:phxpaxos.PaxosMsg)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_value()) {
      GOOGLE_DCHECK(!value_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*value_.UnsafeRawStringPointer())->clear();
    }
    if (has_systemvariables()) {
      GOOGLE_DCHECK(!systemvariables_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*systemvariables_.UnsafeRawStringPointer())->clear();
    }
    if (has_mastervariables()) {
      GOOGLE_DCHECK(!mastervariables_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*mastervariables_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 248u) {
    ::memset(&instanceid_, 0, reinterpret_cast<char*>(&msgtype_) -
      reinterpret_cast<char*>(&instanceid_) + sizeof(msgtype_));
  }
  if (_has_bits_[8 / 32] & 32512u) {
    ::memset(&lastchecksum_, 0, reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&lastchecksum_) + sizeof(flag_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PaxosMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:phxpaxos.PaxosMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 MsgType = 1;
      case 1: {
        if (tag == 8u) {
          set_has_msgtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &msgtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 InstanceID = 2;
      case 2: {
        if (tag == 16u) {
          set_has_instanceid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &instanceid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 NodeID = 3;
      case 3: {
        if (tag == 24u) {
          set_has_nodeid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &nodeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 ProposalID = 4;
      case 4: {
        if (tag == 32u) {
          set_has_proposalid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &proposalid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 ProposalNodeID = 5;
      case 5: {
        if (tag == 40u) {
          set_has_proposalnodeid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &proposalnodeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes Value = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 PreAcceptID = 7;
      case 7: {
        if (tag == 56u) {
          set_has_preacceptid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &preacceptid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 PreAcceptNodeID = 8;
      case 8: {
        if (tag == 64u) {
          set_has_preacceptnodeid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &preacceptnodeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 RejectByPromiseID = 9;
      case 9: {
        if (tag == 72u) {
          set_has_rejectbypromiseid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rejectbypromiseid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 NowInstanceID = 10;
      case 10: {
        if (tag == 80u) {
          set_has_nowinstanceid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &nowinstanceid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 MinChosenInstanceID = 11;
      case 11: {
        if (tag == 88u) {
          set_has_minchoseninstanceid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &minchoseninstanceid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 LastChecksum = 12;
      case 12: {
        if (tag == 96u) {
          set_has_lastchecksum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lastchecksum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 Flag = 13;
      case 13: {
        if (tag == 104u) {
          set_has_flag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes SystemVariables = 14;
      case 14: {
        if (tag == 114u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_systemvariables()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes MasterVariables = 15;
      case 15: {
        if (tag == 122u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_mastervariables()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phxpaxos.PaxosMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phxpaxos.PaxosMsg)
  return false;
#undef DO_
}

void PaxosMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phxpaxos.PaxosMsg)
  // required int32 MsgType = 1;
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->msgtype(), output);
  }

  // optional uint64 InstanceID = 2;
  if (has_instanceid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->instanceid(), output);
  }

  // optional uint64 NodeID = 3;
  if (has_nodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->nodeid(), output);
  }

  // optional uint64 ProposalID = 4;
  if (has_proposalid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->proposalid(), output);
  }

  // optional uint64 ProposalNodeID = 5;
  if (has_proposalnodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->proposalnodeid(), output);
  }

  // optional bytes Value = 6;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->value(), output);
  }

  // optional uint64 PreAcceptID = 7;
  if (has_preacceptid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->preacceptid(), output);
  }

  // optional uint64 PreAcceptNodeID = 8;
  if (has_preacceptnodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->preacceptnodeid(), output);
  }

  // optional uint64 RejectByPromiseID = 9;
  if (has_rejectbypromiseid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->rejectbypromiseid(), output);
  }

  // optional uint64 NowInstanceID = 10;
  if (has_nowinstanceid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->nowinstanceid(), output);
  }

  // optional uint64 MinChosenInstanceID = 11;
  if (has_minchoseninstanceid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(11, this->minchoseninstanceid(), output);
  }

  // optional uint32 LastChecksum = 12;
  if (has_lastchecksum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->lastchecksum(), output);
  }

  // optional uint32 Flag = 13;
  if (has_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->flag(), output);
  }

  // optional bytes SystemVariables = 14;
  if (has_systemvariables()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      14, this->systemvariables(), output);
  }

  // optional bytes MasterVariables = 15;
  if (has_mastervariables()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      15, this->mastervariables(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:phxpaxos.PaxosMsg)
}

::google::protobuf::uint8* PaxosMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:phxpaxos.PaxosMsg)
  // required int32 MsgType = 1;
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->msgtype(), target);
  }

  // optional uint64 InstanceID = 2;
  if (has_instanceid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->instanceid(), target);
  }

  // optional uint64 NodeID = 3;
  if (has_nodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->nodeid(), target);
  }

  // optional uint64 ProposalID = 4;
  if (has_proposalid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->proposalid(), target);
  }

  // optional uint64 ProposalNodeID = 5;
  if (has_proposalnodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->proposalnodeid(), target);
  }

  // optional bytes Value = 6;
  if (has_value()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->value(), target);
  }

  // optional uint64 PreAcceptID = 7;
  if (has_preacceptid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->preacceptid(), target);
  }

  // optional uint64 PreAcceptNodeID = 8;
  if (has_preacceptnodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->preacceptnodeid(), target);
  }

  // optional uint64 RejectByPromiseID = 9;
  if (has_rejectbypromiseid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->rejectbypromiseid(), target);
  }

  // optional uint64 NowInstanceID = 10;
  if (has_nowinstanceid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->nowinstanceid(), target);
  }

  // optional uint64 MinChosenInstanceID = 11;
  if (has_minchoseninstanceid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(11, this->minchoseninstanceid(), target);
  }

  // optional uint32 LastChecksum = 12;
  if (has_lastchecksum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->lastchecksum(), target);
  }

  // optional uint32 Flag = 13;
  if (has_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->flag(), target);
  }

  // optional bytes SystemVariables = 14;
  if (has_systemvariables()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        14, this->systemvariables(), target);
  }

  // optional bytes MasterVariables = 15;
  if (has_mastervariables()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        15, this->mastervariables(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:phxpaxos.PaxosMsg)
  return target;
}

size_t PaxosMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:phxpaxos.PaxosMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required int32 MsgType = 1;
  if (has_msgtype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->msgtype());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional bytes Value = 6;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->value());
    }

    // optional bytes SystemVariables = 14;
    if (has_systemvariables()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->systemvariables());
    }

    // optional bytes MasterVariables = 15;
    if (has_mastervariables()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->mastervariables());
    }

    // optional uint64 InstanceID = 2;
    if (has_instanceid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->instanceid());
    }

    // optional uint64 NodeID = 3;
    if (has_nodeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->nodeid());
    }

    // optional uint64 ProposalID = 4;
    if (has_proposalid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->proposalid());
    }

    // optional uint64 ProposalNodeID = 5;
    if (has_proposalnodeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->proposalnodeid());
    }

  }
  if (_has_bits_[8 / 32] & 32512u) {
    // optional uint32 LastChecksum = 12;
    if (has_lastchecksum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->lastchecksum());
    }

    // optional uint64 PreAcceptID = 7;
    if (has_preacceptid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->preacceptid());
    }

    // optional uint64 PreAcceptNodeID = 8;
    if (has_preacceptnodeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->preacceptnodeid());
    }

    // optional uint64 RejectByPromiseID = 9;
    if (has_rejectbypromiseid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->rejectbypromiseid());
    }

    // optional uint64 NowInstanceID = 10;
    if (has_nowinstanceid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->nowinstanceid());
    }

    // optional uint64 MinChosenInstanceID = 11;
    if (has_minchoseninstanceid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->minchoseninstanceid());
    }

    // optional uint32 Flag = 13;
    if (has_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->flag());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PaxosMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:phxpaxos.PaxosMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const PaxosMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PaxosMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:phxpaxos.PaxosMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:phxpaxos.PaxosMsg)
    MergeFrom(*source);
  }
}

void PaxosMsg::MergeFrom(const PaxosMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phxpaxos.PaxosMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 255u) {
    if (from.has_value()) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
    if (from.has_systemvariables()) {
      set_has_systemvariables();
      systemvariables_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.systemvariables_);
    }
    if (from.has_mastervariables()) {
      set_has_mastervariables();
      mastervariables_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mastervariables_);
    }
    if (from.has_instanceid()) {
      set_instanceid(from.instanceid());
    }
    if (from.has_nodeid()) {
      set_nodeid(from.nodeid());
    }
    if (from.has_proposalid()) {
      set_proposalid(from.proposalid());
    }
    if (from.has_proposalnodeid()) {
      set_proposalnodeid(from.proposalnodeid());
    }
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
  }
  if (from._has_bits_[8 / 32] & 32512u) {
    if (from.has_lastchecksum()) {
      set_lastchecksum(from.lastchecksum());
    }
    if (from.has_preacceptid()) {
      set_preacceptid(from.preacceptid());
    }
    if (from.has_preacceptnodeid()) {
      set_preacceptnodeid(from.preacceptnodeid());
    }
    if (from.has_rejectbypromiseid()) {
      set_rejectbypromiseid(from.rejectbypromiseid());
    }
    if (from.has_nowinstanceid()) {
      set_nowinstanceid(from.nowinstanceid());
    }
    if (from.has_minchoseninstanceid()) {
      set_minchoseninstanceid(from.minchoseninstanceid());
    }
    if (from.has_flag()) {
      set_flag(from.flag());
    }
  }
}

void PaxosMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:phxpaxos.PaxosMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaxosMsg::CopyFrom(const PaxosMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phxpaxos.PaxosMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaxosMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000080) != 0x00000080) return false;
  return true;
}

void PaxosMsg::Swap(PaxosMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PaxosMsg::InternalSwap(PaxosMsg* other) {
  value_.Swap(&other->value_);
  systemvariables_.Swap(&other->systemvariables_);
  mastervariables_.Swap(&other->mastervariables_);
  std::swap(instanceid_, other->instanceid_);
  std::swap(nodeid_, other->nodeid_);
  std::swap(proposalid_, other->proposalid_);
  std::swap(proposalnodeid_, other->proposalnodeid_);
  std::swap(msgtype_, other->msgtype_);
  std::swap(lastchecksum_, other->lastchecksum_);
  std::swap(preacceptid_, other->preacceptid_);
  std::swap(preacceptnodeid_, other->preacceptnodeid_);
  std::swap(rejectbypromiseid_, other->rejectbypromiseid_);
  std::swap(nowinstanceid_, other->nowinstanceid_);
  std::swap(minchoseninstanceid_, other->minchoseninstanceid_);
  std::swap(flag_, other->flag_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PaxosMsg::GetMetadata() const {
  protobuf_paxos_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_paxos_5fmsg_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PaxosMsg

// required int32 MsgType = 1;
bool PaxosMsg::has_msgtype() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void PaxosMsg::set_has_msgtype() {
  _has_bits_[0] |= 0x00000080u;
}
void PaxosMsg::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000080u;
}
void PaxosMsg::clear_msgtype() {
  msgtype_ = 0;
  clear_has_msgtype();
}
::google::protobuf::int32 PaxosMsg::msgtype() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosMsg.MsgType)
  return msgtype_;
}
void PaxosMsg::set_msgtype(::google::protobuf::int32 value) {
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosMsg.MsgType)
}

// optional uint64 InstanceID = 2;
bool PaxosMsg::has_instanceid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void PaxosMsg::set_has_instanceid() {
  _has_bits_[0] |= 0x00000008u;
}
void PaxosMsg::clear_has_instanceid() {
  _has_bits_[0] &= ~0x00000008u;
}
void PaxosMsg::clear_instanceid() {
  instanceid_ = GOOGLE_ULONGLONG(0);
  clear_has_instanceid();
}
::google::protobuf::uint64 PaxosMsg::instanceid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosMsg.InstanceID)
  return instanceid_;
}
void PaxosMsg::set_instanceid(::google::protobuf::uint64 value) {
  set_has_instanceid();
  instanceid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosMsg.InstanceID)
}

// optional uint64 NodeID = 3;
bool PaxosMsg::has_nodeid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void PaxosMsg::set_has_nodeid() {
  _has_bits_[0] |= 0x00000010u;
}
void PaxosMsg::clear_has_nodeid() {
  _has_bits_[0] &= ~0x00000010u;
}
void PaxosMsg::clear_nodeid() {
  nodeid_ = GOOGLE_ULONGLONG(0);
  clear_has_nodeid();
}
::google::protobuf::uint64 PaxosMsg::nodeid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosMsg.NodeID)
  return nodeid_;
}
void PaxosMsg::set_nodeid(::google::protobuf::uint64 value) {
  set_has_nodeid();
  nodeid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosMsg.NodeID)
}

// optional uint64 ProposalID = 4;
bool PaxosMsg::has_proposalid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void PaxosMsg::set_has_proposalid() {
  _has_bits_[0] |= 0x00000020u;
}
void PaxosMsg::clear_has_proposalid() {
  _has_bits_[0] &= ~0x00000020u;
}
void PaxosMsg::clear_proposalid() {
  proposalid_ = GOOGLE_ULONGLONG(0);
  clear_has_proposalid();
}
::google::protobuf::uint64 PaxosMsg::proposalid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosMsg.ProposalID)
  return proposalid_;
}
void PaxosMsg::set_proposalid(::google::protobuf::uint64 value) {
  set_has_proposalid();
  proposalid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosMsg.ProposalID)
}

// optional uint64 ProposalNodeID = 5;
bool PaxosMsg::has_proposalnodeid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void PaxosMsg::set_has_proposalnodeid() {
  _has_bits_[0] |= 0x00000040u;
}
void PaxosMsg::clear_has_proposalnodeid() {
  _has_bits_[0] &= ~0x00000040u;
}
void PaxosMsg::clear_proposalnodeid() {
  proposalnodeid_ = GOOGLE_ULONGLONG(0);
  clear_has_proposalnodeid();
}
::google::protobuf::uint64 PaxosMsg::proposalnodeid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosMsg.ProposalNodeID)
  return proposalnodeid_;
}
void PaxosMsg::set_proposalnodeid(::google::protobuf::uint64 value) {
  set_has_proposalnodeid();
  proposalnodeid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosMsg.ProposalNodeID)
}

// optional bytes Value = 6;
bool PaxosMsg::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PaxosMsg::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
void PaxosMsg::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
void PaxosMsg::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
const ::std::string& PaxosMsg::value() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosMsg.Value)
  return value_.GetNoArena();
}
void PaxosMsg::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosMsg.Value)
}
#if LANG_CXX11
void PaxosMsg::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:phxpaxos.PaxosMsg.Value)
}
#endif
void PaxosMsg::set_value(const char* value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phxpaxos.PaxosMsg.Value)
}
void PaxosMsg::set_value(const void* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phxpaxos.PaxosMsg.Value)
}
::std::string* PaxosMsg::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:phxpaxos.PaxosMsg.Value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PaxosMsg::release_value() {
  // @@protoc_insertion_point(field_release:phxpaxos.PaxosMsg.Value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PaxosMsg::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:phxpaxos.PaxosMsg.Value)
}

// optional uint64 PreAcceptID = 7;
bool PaxosMsg::has_preacceptid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void PaxosMsg::set_has_preacceptid() {
  _has_bits_[0] |= 0x00000200u;
}
void PaxosMsg::clear_has_preacceptid() {
  _has_bits_[0] &= ~0x00000200u;
}
void PaxosMsg::clear_preacceptid() {
  preacceptid_ = GOOGLE_ULONGLONG(0);
  clear_has_preacceptid();
}
::google::protobuf::uint64 PaxosMsg::preacceptid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosMsg.PreAcceptID)
  return preacceptid_;
}
void PaxosMsg::set_preacceptid(::google::protobuf::uint64 value) {
  set_has_preacceptid();
  preacceptid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosMsg.PreAcceptID)
}

// optional uint64 PreAcceptNodeID = 8;
bool PaxosMsg::has_preacceptnodeid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void PaxosMsg::set_has_preacceptnodeid() {
  _has_bits_[0] |= 0x00000400u;
}
void PaxosMsg::clear_has_preacceptnodeid() {
  _has_bits_[0] &= ~0x00000400u;
}
void PaxosMsg::clear_preacceptnodeid() {
  preacceptnodeid_ = GOOGLE_ULONGLONG(0);
  clear_has_preacceptnodeid();
}
::google::protobuf::uint64 PaxosMsg::preacceptnodeid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosMsg.PreAcceptNodeID)
  return preacceptnodeid_;
}
void PaxosMsg::set_preacceptnodeid(::google::protobuf::uint64 value) {
  set_has_preacceptnodeid();
  preacceptnodeid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosMsg.PreAcceptNodeID)
}

// optional uint64 RejectByPromiseID = 9;
bool PaxosMsg::has_rejectbypromiseid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void PaxosMsg::set_has_rejectbypromiseid() {
  _has_bits_[0] |= 0x00000800u;
}
void PaxosMsg::clear_has_rejectbypromiseid() {
  _has_bits_[0] &= ~0x00000800u;
}
void PaxosMsg::clear_rejectbypromiseid() {
  rejectbypromiseid_ = GOOGLE_ULONGLONG(0);
  clear_has_rejectbypromiseid();
}
::google::protobuf::uint64 PaxosMsg::rejectbypromiseid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosMsg.RejectByPromiseID)
  return rejectbypromiseid_;
}
void PaxosMsg::set_rejectbypromiseid(::google::protobuf::uint64 value) {
  set_has_rejectbypromiseid();
  rejectbypromiseid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosMsg.RejectByPromiseID)
}

// optional uint64 NowInstanceID = 10;
bool PaxosMsg::has_nowinstanceid() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void PaxosMsg::set_has_nowinstanceid() {
  _has_bits_[0] |= 0x00001000u;
}
void PaxosMsg::clear_has_nowinstanceid() {
  _has_bits_[0] &= ~0x00001000u;
}
void PaxosMsg::clear_nowinstanceid() {
  nowinstanceid_ = GOOGLE_ULONGLONG(0);
  clear_has_nowinstanceid();
}
::google::protobuf::uint64 PaxosMsg::nowinstanceid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosMsg.NowInstanceID)
  return nowinstanceid_;
}
void PaxosMsg::set_nowinstanceid(::google::protobuf::uint64 value) {
  set_has_nowinstanceid();
  nowinstanceid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosMsg.NowInstanceID)
}

// optional uint64 MinChosenInstanceID = 11;
bool PaxosMsg::has_minchoseninstanceid() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void PaxosMsg::set_has_minchoseninstanceid() {
  _has_bits_[0] |= 0x00002000u;
}
void PaxosMsg::clear_has_minchoseninstanceid() {
  _has_bits_[0] &= ~0x00002000u;
}
void PaxosMsg::clear_minchoseninstanceid() {
  minchoseninstanceid_ = GOOGLE_ULONGLONG(0);
  clear_has_minchoseninstanceid();
}
::google::protobuf::uint64 PaxosMsg::minchoseninstanceid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosMsg.MinChosenInstanceID)
  return minchoseninstanceid_;
}
void PaxosMsg::set_minchoseninstanceid(::google::protobuf::uint64 value) {
  set_has_minchoseninstanceid();
  minchoseninstanceid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosMsg.MinChosenInstanceID)
}

// optional uint32 LastChecksum = 12;
bool PaxosMsg::has_lastchecksum() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void PaxosMsg::set_has_lastchecksum() {
  _has_bits_[0] |= 0x00000100u;
}
void PaxosMsg::clear_has_lastchecksum() {
  _has_bits_[0] &= ~0x00000100u;
}
void PaxosMsg::clear_lastchecksum() {
  lastchecksum_ = 0u;
  clear_has_lastchecksum();
}
::google::protobuf::uint32 PaxosMsg::lastchecksum() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosMsg.LastChecksum)
  return lastchecksum_;
}
void PaxosMsg::set_lastchecksum(::google::protobuf::uint32 value) {
  set_has_lastchecksum();
  lastchecksum_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosMsg.LastChecksum)
}

// optional uint32 Flag = 13;
bool PaxosMsg::has_flag() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void PaxosMsg::set_has_flag() {
  _has_bits_[0] |= 0x00004000u;
}
void PaxosMsg::clear_has_flag() {
  _has_bits_[0] &= ~0x00004000u;
}
void PaxosMsg::clear_flag() {
  flag_ = 0u;
  clear_has_flag();
}
::google::protobuf::uint32 PaxosMsg::flag() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosMsg.Flag)
  return flag_;
}
void PaxosMsg::set_flag(::google::protobuf::uint32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosMsg.Flag)
}

// optional bytes SystemVariables = 14;
bool PaxosMsg::has_systemvariables() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PaxosMsg::set_has_systemvariables() {
  _has_bits_[0] |= 0x00000002u;
}
void PaxosMsg::clear_has_systemvariables() {
  _has_bits_[0] &= ~0x00000002u;
}
void PaxosMsg::clear_systemvariables() {
  systemvariables_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_systemvariables();
}
const ::std::string& PaxosMsg::systemvariables() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosMsg.SystemVariables)
  return systemvariables_.GetNoArena();
}
void PaxosMsg::set_systemvariables(const ::std::string& value) {
  set_has_systemvariables();
  systemvariables_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosMsg.SystemVariables)
}
#if LANG_CXX11
void PaxosMsg::set_systemvariables(::std::string&& value) {
  set_has_systemvariables();
  systemvariables_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:phxpaxos.PaxosMsg.SystemVariables)
}
#endif
void PaxosMsg::set_systemvariables(const char* value) {
  set_has_systemvariables();
  systemvariables_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phxpaxos.PaxosMsg.SystemVariables)
}
void PaxosMsg::set_systemvariables(const void* value, size_t size) {
  set_has_systemvariables();
  systemvariables_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phxpaxos.PaxosMsg.SystemVariables)
}
::std::string* PaxosMsg::mutable_systemvariables() {
  set_has_systemvariables();
  // @@protoc_insertion_point(field_mutable:phxpaxos.PaxosMsg.SystemVariables)
  return systemvariables_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PaxosMsg::release_systemvariables() {
  // @@protoc_insertion_point(field_release:phxpaxos.PaxosMsg.SystemVariables)
  clear_has_systemvariables();
  return systemvariables_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PaxosMsg::set_allocated_systemvariables(::std::string* systemvariables) {
  if (systemvariables != NULL) {
    set_has_systemvariables();
  } else {
    clear_has_systemvariables();
  }
  systemvariables_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), systemvariables);
  // @@protoc_insertion_point(field_set_allocated:phxpaxos.PaxosMsg.SystemVariables)
}

// optional bytes MasterVariables = 15;
bool PaxosMsg::has_mastervariables() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PaxosMsg::set_has_mastervariables() {
  _has_bits_[0] |= 0x00000004u;
}
void PaxosMsg::clear_has_mastervariables() {
  _has_bits_[0] &= ~0x00000004u;
}
void PaxosMsg::clear_mastervariables() {
  mastervariables_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mastervariables();
}
const ::std::string& PaxosMsg::mastervariables() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosMsg.MasterVariables)
  return mastervariables_.GetNoArena();
}
void PaxosMsg::set_mastervariables(const ::std::string& value) {
  set_has_mastervariables();
  mastervariables_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosMsg.MasterVariables)
}
#if LANG_CXX11
void PaxosMsg::set_mastervariables(::std::string&& value) {
  set_has_mastervariables();
  mastervariables_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:phxpaxos.PaxosMsg.MasterVariables)
}
#endif
void PaxosMsg::set_mastervariables(const char* value) {
  set_has_mastervariables();
  mastervariables_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phxpaxos.PaxosMsg.MasterVariables)
}
void PaxosMsg::set_mastervariables(const void* value, size_t size) {
  set_has_mastervariables();
  mastervariables_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phxpaxos.PaxosMsg.MasterVariables)
}
::std::string* PaxosMsg::mutable_mastervariables() {
  set_has_mastervariables();
  // @@protoc_insertion_point(field_mutable:phxpaxos.PaxosMsg.MasterVariables)
  return mastervariables_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PaxosMsg::release_mastervariables() {
  // @@protoc_insertion_point(field_release:phxpaxos.PaxosMsg.MasterVariables)
  clear_has_mastervariables();
  return mastervariables_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PaxosMsg::set_allocated_mastervariables(::std::string* mastervariables) {
  if (mastervariables != NULL) {
    set_has_mastervariables();
  } else {
    clear_has_mastervariables();
  }
  mastervariables_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mastervariables);
  // @@protoc_insertion_point(field_set_allocated:phxpaxos.PaxosMsg.MasterVariables)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckpointMsg::kMsgTypeFieldNumber;
const int CheckpointMsg::kNodeIDFieldNumber;
const int CheckpointMsg::kFlagFieldNumber;
const int CheckpointMsg::kUUIDFieldNumber;
const int CheckpointMsg::kSequenceFieldNumber;
const int CheckpointMsg::kCheckpointInstanceIDFieldNumber;
const int CheckpointMsg::kChecksumFieldNumber;
const int CheckpointMsg::kFilePathFieldNumber;
const int CheckpointMsg::kSMIDFieldNumber;
const int CheckpointMsg::kOffsetFieldNumber;
const int CheckpointMsg::kBufferFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckpointMsg::CheckpointMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_paxos_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:phxpaxos.CheckpointMsg)
}
CheckpointMsg::CheckpointMsg(const CheckpointMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filepath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_filepath()) {
    filepath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filepath_);
  }
  buffer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_buffer()) {
    buffer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buffer_);
  }
  ::memcpy(&nodeid_, &from.nodeid_,
    reinterpret_cast<char*>(&offset_) -
    reinterpret_cast<char*>(&nodeid_) + sizeof(offset_));
  // @@protoc_insertion_point(copy_constructor:phxpaxos.CheckpointMsg)
}

void CheckpointMsg::SharedCtor() {
  _cached_size_ = 0;
  filepath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buffer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nodeid_, 0, reinterpret_cast<char*>(&offset_) -
    reinterpret_cast<char*>(&nodeid_) + sizeof(offset_));
}

CheckpointMsg::~CheckpointMsg() {
  // @@protoc_insertion_point(destructor:phxpaxos.CheckpointMsg)
  SharedDtor();
}

void CheckpointMsg::SharedDtor() {
  filepath_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buffer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CheckpointMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CheckpointMsg::descriptor() {
  protobuf_paxos_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_paxos_5fmsg_2eproto::file_level_metadata[2].descriptor;
}

const CheckpointMsg& CheckpointMsg::default_instance() {
  protobuf_paxos_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CheckpointMsg* CheckpointMsg::New(::google::protobuf::Arena* arena) const {
  CheckpointMsg* n = new CheckpointMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CheckpointMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:phxpaxos.CheckpointMsg)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_filepath()) {
      GOOGLE_DCHECK(!filepath_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*filepath_.UnsafeRawStringPointer())->clear();
    }
    if (has_buffer()) {
      GOOGLE_DCHECK(!buffer_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*buffer_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 252u) {
    ::memset(&nodeid_, 0, reinterpret_cast<char*>(&checkpointinstanceid_) -
      reinterpret_cast<char*>(&nodeid_) + sizeof(checkpointinstanceid_));
  }
  if (_has_bits_[8 / 32] & 1792u) {
    ::memset(&checksum_, 0, reinterpret_cast<char*>(&offset_) -
      reinterpret_cast<char*>(&checksum_) + sizeof(offset_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CheckpointMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:phxpaxos.CheckpointMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 MsgType = 1;
      case 1: {
        if (tag == 8u) {
          set_has_msgtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &msgtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 NodeID = 2;
      case 2: {
        if (tag == 16u) {
          set_has_nodeid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &nodeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 Flag = 3;
      case 3: {
        if (tag == 24u) {
          set_has_flag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 UUID = 4;
      case 4: {
        if (tag == 32u) {
          set_has_uuid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uuid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 Sequence = 5;
      case 5: {
        if (tag == 40u) {
          set_has_sequence();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sequence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 CheckpointInstanceID = 6;
      case 6: {
        if (tag == 48u) {
          set_has_checkpointinstanceid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &checkpointinstanceid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 Checksum = 7;
      case 7: {
        if (tag == 56u) {
          set_has_checksum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &checksum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string FilePath = 8;
      case 8: {
        if (tag == 66u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filepath()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filepath().data(), this->filepath().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "phxpaxos.CheckpointMsg.FilePath");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 SMID = 9;
      case 9: {
        if (tag == 72u) {
          set_has_smid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &smid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 Offset = 10;
      case 10: {
        if (tag == 80u) {
          set_has_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes Buffer = 11;
      case 11: {
        if (tag == 90u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_buffer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phxpaxos.CheckpointMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phxpaxos.CheckpointMsg)
  return false;
#undef DO_
}

void CheckpointMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phxpaxos.CheckpointMsg)
  // required int32 MsgType = 1;
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->msgtype(), output);
  }

  // required uint64 NodeID = 2;
  if (has_nodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->nodeid(), output);
  }

  // optional int32 Flag = 3;
  if (has_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->flag(), output);
  }

  // required uint64 UUID = 4;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->uuid(), output);
  }

  // required uint64 Sequence = 5;
  if (has_sequence()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->sequence(), output);
  }

  // optional uint64 CheckpointInstanceID = 6;
  if (has_checkpointinstanceid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->checkpointinstanceid(), output);
  }

  // optional uint32 Checksum = 7;
  if (has_checksum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->checksum(), output);
  }

  // optional string FilePath = 8;
  if (has_filepath()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filepath().data(), this->filepath().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "phxpaxos.CheckpointMsg.FilePath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->filepath(), output);
  }

  // optional int32 SMID = 9;
  if (has_smid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->smid(), output);
  }

  // optional uint64 Offset = 10;
  if (has_offset()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->offset(), output);
  }

  // optional bytes Buffer = 11;
  if (has_buffer()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      11, this->buffer(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:phxpaxos.CheckpointMsg)
}

::google::protobuf::uint8* CheckpointMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:phxpaxos.CheckpointMsg)
  // required int32 MsgType = 1;
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->msgtype(), target);
  }

  // required uint64 NodeID = 2;
  if (has_nodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->nodeid(), target);
  }

  // optional int32 Flag = 3;
  if (has_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->flag(), target);
  }

  // required uint64 UUID = 4;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->uuid(), target);
  }

  // required uint64 Sequence = 5;
  if (has_sequence()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->sequence(), target);
  }

  // optional uint64 CheckpointInstanceID = 6;
  if (has_checkpointinstanceid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->checkpointinstanceid(), target);
  }

  // optional uint32 Checksum = 7;
  if (has_checksum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->checksum(), target);
  }

  // optional string FilePath = 8;
  if (has_filepath()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filepath().data(), this->filepath().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "phxpaxos.CheckpointMsg.FilePath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->filepath(), target);
  }

  // optional int32 SMID = 9;
  if (has_smid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->smid(), target);
  }

  // optional uint64 Offset = 10;
  if (has_offset()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->offset(), target);
  }

  // optional bytes Buffer = 11;
  if (has_buffer()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        11, this->buffer(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:phxpaxos.CheckpointMsg)
  return target;
}

size_t CheckpointMsg::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:phxpaxos.CheckpointMsg)
  size_t total_size = 0;

  if (has_nodeid()) {
    // required uint64 NodeID = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->nodeid());
  }

  if (has_msgtype()) {
    // required int32 MsgType = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->msgtype());
  }

  if (has_uuid()) {
    // required uint64 UUID = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uuid());
  }

  if (has_sequence()) {
    // required uint64 Sequence = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sequence());
  }

  return total_size;
}
size_t CheckpointMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:phxpaxos.CheckpointMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000006c) ^ 0x0000006c) == 0) {  // All required fields are present.
    // required uint64 NodeID = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->nodeid());

    // required int32 MsgType = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->msgtype());

    // required uint64 UUID = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uuid());

    // required uint64 Sequence = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sequence());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string FilePath = 8;
    if (has_filepath()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filepath());
    }

    // optional bytes Buffer = 11;
    if (has_buffer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->buffer());
    }

  }
  // optional int32 Flag = 3;
  if (has_flag()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->flag());
  }

  // optional uint64 CheckpointInstanceID = 6;
  if (has_checkpointinstanceid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->checkpointinstanceid());
  }

  if (_has_bits_[8 / 32] & 1792u) {
    // optional uint32 Checksum = 7;
    if (has_checksum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->checksum());
    }

    // optional int32 SMID = 9;
    if (has_smid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->smid());
    }

    // optional uint64 Offset = 10;
    if (has_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->offset());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CheckpointMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:phxpaxos.CheckpointMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckpointMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckpointMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:phxpaxos.CheckpointMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:phxpaxos.CheckpointMsg)
    MergeFrom(*source);
  }
}

void CheckpointMsg::MergeFrom(const CheckpointMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phxpaxos.CheckpointMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 255u) {
    if (from.has_filepath()) {
      set_has_filepath();
      filepath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filepath_);
    }
    if (from.has_buffer()) {
      set_has_buffer();
      buffer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buffer_);
    }
    if (from.has_nodeid()) {
      set_nodeid(from.nodeid());
    }
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_flag()) {
      set_flag(from.flag());
    }
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
    if (from.has_sequence()) {
      set_sequence(from.sequence());
    }
    if (from.has_checkpointinstanceid()) {
      set_checkpointinstanceid(from.checkpointinstanceid());
    }
  }
  if (from._has_bits_[8 / 32] & 1792u) {
    if (from.has_checksum()) {
      set_checksum(from.checksum());
    }
    if (from.has_smid()) {
      set_smid(from.smid());
    }
    if (from.has_offset()) {
      set_offset(from.offset());
    }
  }
}

void CheckpointMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:phxpaxos.CheckpointMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckpointMsg::CopyFrom(const CheckpointMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phxpaxos.CheckpointMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckpointMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000006c) != 0x0000006c) return false;
  return true;
}

void CheckpointMsg::Swap(CheckpointMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckpointMsg::InternalSwap(CheckpointMsg* other) {
  filepath_.Swap(&other->filepath_);
  buffer_.Swap(&other->buffer_);
  std::swap(nodeid_, other->nodeid_);
  std::swap(msgtype_, other->msgtype_);
  std::swap(flag_, other->flag_);
  std::swap(uuid_, other->uuid_);
  std::swap(sequence_, other->sequence_);
  std::swap(checkpointinstanceid_, other->checkpointinstanceid_);
  std::swap(checksum_, other->checksum_);
  std::swap(smid_, other->smid_);
  std::swap(offset_, other->offset_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CheckpointMsg::GetMetadata() const {
  protobuf_paxos_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_paxos_5fmsg_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CheckpointMsg

// required int32 MsgType = 1;
bool CheckpointMsg::has_msgtype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CheckpointMsg::set_has_msgtype() {
  _has_bits_[0] |= 0x00000008u;
}
void CheckpointMsg::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000008u;
}
void CheckpointMsg::clear_msgtype() {
  msgtype_ = 0;
  clear_has_msgtype();
}
::google::protobuf::int32 CheckpointMsg::msgtype() const {
  // @@protoc_insertion_point(field_get:phxpaxos.CheckpointMsg.MsgType)
  return msgtype_;
}
void CheckpointMsg::set_msgtype(::google::protobuf::int32 value) {
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.CheckpointMsg.MsgType)
}

// required uint64 NodeID = 2;
bool CheckpointMsg::has_nodeid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CheckpointMsg::set_has_nodeid() {
  _has_bits_[0] |= 0x00000004u;
}
void CheckpointMsg::clear_has_nodeid() {
  _has_bits_[0] &= ~0x00000004u;
}
void CheckpointMsg::clear_nodeid() {
  nodeid_ = GOOGLE_ULONGLONG(0);
  clear_has_nodeid();
}
::google::protobuf::uint64 CheckpointMsg::nodeid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.CheckpointMsg.NodeID)
  return nodeid_;
}
void CheckpointMsg::set_nodeid(::google::protobuf::uint64 value) {
  set_has_nodeid();
  nodeid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.CheckpointMsg.NodeID)
}

// optional int32 Flag = 3;
bool CheckpointMsg::has_flag() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CheckpointMsg::set_has_flag() {
  _has_bits_[0] |= 0x00000010u;
}
void CheckpointMsg::clear_has_flag() {
  _has_bits_[0] &= ~0x00000010u;
}
void CheckpointMsg::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
::google::protobuf::int32 CheckpointMsg::flag() const {
  // @@protoc_insertion_point(field_get:phxpaxos.CheckpointMsg.Flag)
  return flag_;
}
void CheckpointMsg::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.CheckpointMsg.Flag)
}

// required uint64 UUID = 4;
bool CheckpointMsg::has_uuid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CheckpointMsg::set_has_uuid() {
  _has_bits_[0] |= 0x00000020u;
}
void CheckpointMsg::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000020u;
}
void CheckpointMsg::clear_uuid() {
  uuid_ = GOOGLE_ULONGLONG(0);
  clear_has_uuid();
}
::google::protobuf::uint64 CheckpointMsg::uuid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.CheckpointMsg.UUID)
  return uuid_;
}
void CheckpointMsg::set_uuid(::google::protobuf::uint64 value) {
  set_has_uuid();
  uuid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.CheckpointMsg.UUID)
}

// required uint64 Sequence = 5;
bool CheckpointMsg::has_sequence() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CheckpointMsg::set_has_sequence() {
  _has_bits_[0] |= 0x00000040u;
}
void CheckpointMsg::clear_has_sequence() {
  _has_bits_[0] &= ~0x00000040u;
}
void CheckpointMsg::clear_sequence() {
  sequence_ = GOOGLE_ULONGLONG(0);
  clear_has_sequence();
}
::google::protobuf::uint64 CheckpointMsg::sequence() const {
  // @@protoc_insertion_point(field_get:phxpaxos.CheckpointMsg.Sequence)
  return sequence_;
}
void CheckpointMsg::set_sequence(::google::protobuf::uint64 value) {
  set_has_sequence();
  sequence_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.CheckpointMsg.Sequence)
}

// optional uint64 CheckpointInstanceID = 6;
bool CheckpointMsg::has_checkpointinstanceid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CheckpointMsg::set_has_checkpointinstanceid() {
  _has_bits_[0] |= 0x00000080u;
}
void CheckpointMsg::clear_has_checkpointinstanceid() {
  _has_bits_[0] &= ~0x00000080u;
}
void CheckpointMsg::clear_checkpointinstanceid() {
  checkpointinstanceid_ = GOOGLE_ULONGLONG(0);
  clear_has_checkpointinstanceid();
}
::google::protobuf::uint64 CheckpointMsg::checkpointinstanceid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.CheckpointMsg.CheckpointInstanceID)
  return checkpointinstanceid_;
}
void CheckpointMsg::set_checkpointinstanceid(::google::protobuf::uint64 value) {
  set_has_checkpointinstanceid();
  checkpointinstanceid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.CheckpointMsg.CheckpointInstanceID)
}

// optional uint32 Checksum = 7;
bool CheckpointMsg::has_checksum() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void CheckpointMsg::set_has_checksum() {
  _has_bits_[0] |= 0x00000100u;
}
void CheckpointMsg::clear_has_checksum() {
  _has_bits_[0] &= ~0x00000100u;
}
void CheckpointMsg::clear_checksum() {
  checksum_ = 0u;
  clear_has_checksum();
}
::google::protobuf::uint32 CheckpointMsg::checksum() const {
  // @@protoc_insertion_point(field_get:phxpaxos.CheckpointMsg.Checksum)
  return checksum_;
}
void CheckpointMsg::set_checksum(::google::protobuf::uint32 value) {
  set_has_checksum();
  checksum_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.CheckpointMsg.Checksum)
}

// optional string FilePath = 8;
bool CheckpointMsg::has_filepath() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CheckpointMsg::set_has_filepath() {
  _has_bits_[0] |= 0x00000001u;
}
void CheckpointMsg::clear_has_filepath() {
  _has_bits_[0] &= ~0x00000001u;
}
void CheckpointMsg::clear_filepath() {
  filepath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_filepath();
}
const ::std::string& CheckpointMsg::filepath() const {
  // @@protoc_insertion_point(field_get:phxpaxos.CheckpointMsg.FilePath)
  return filepath_.GetNoArena();
}
void CheckpointMsg::set_filepath(const ::std::string& value) {
  set_has_filepath();
  filepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:phxpaxos.CheckpointMsg.FilePath)
}
#if LANG_CXX11
void CheckpointMsg::set_filepath(::std::string&& value) {
  set_has_filepath();
  filepath_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:phxpaxos.CheckpointMsg.FilePath)
}
#endif
void CheckpointMsg::set_filepath(const char* value) {
  set_has_filepath();
  filepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phxpaxos.CheckpointMsg.FilePath)
}
void CheckpointMsg::set_filepath(const char* value, size_t size) {
  set_has_filepath();
  filepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phxpaxos.CheckpointMsg.FilePath)
}
::std::string* CheckpointMsg::mutable_filepath() {
  set_has_filepath();
  // @@protoc_insertion_point(field_mutable:phxpaxos.CheckpointMsg.FilePath)
  return filepath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CheckpointMsg::release_filepath() {
  // @@protoc_insertion_point(field_release:phxpaxos.CheckpointMsg.FilePath)
  clear_has_filepath();
  return filepath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckpointMsg::set_allocated_filepath(::std::string* filepath) {
  if (filepath != NULL) {
    set_has_filepath();
  } else {
    clear_has_filepath();
  }
  filepath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filepath);
  // @@protoc_insertion_point(field_set_allocated:phxpaxos.CheckpointMsg.FilePath)
}

// optional int32 SMID = 9;
bool CheckpointMsg::has_smid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void CheckpointMsg::set_has_smid() {
  _has_bits_[0] |= 0x00000200u;
}
void CheckpointMsg::clear_has_smid() {
  _has_bits_[0] &= ~0x00000200u;
}
void CheckpointMsg::clear_smid() {
  smid_ = 0;
  clear_has_smid();
}
::google::protobuf::int32 CheckpointMsg::smid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.CheckpointMsg.SMID)
  return smid_;
}
void CheckpointMsg::set_smid(::google::protobuf::int32 value) {
  set_has_smid();
  smid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.CheckpointMsg.SMID)
}

// optional uint64 Offset = 10;
bool CheckpointMsg::has_offset() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void CheckpointMsg::set_has_offset() {
  _has_bits_[0] |= 0x00000400u;
}
void CheckpointMsg::clear_has_offset() {
  _has_bits_[0] &= ~0x00000400u;
}
void CheckpointMsg::clear_offset() {
  offset_ = GOOGLE_ULONGLONG(0);
  clear_has_offset();
}
::google::protobuf::uint64 CheckpointMsg::offset() const {
  // @@protoc_insertion_point(field_get:phxpaxos.CheckpointMsg.Offset)
  return offset_;
}
void CheckpointMsg::set_offset(::google::protobuf::uint64 value) {
  set_has_offset();
  offset_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.CheckpointMsg.Offset)
}

// optional bytes Buffer = 11;
bool CheckpointMsg::has_buffer() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CheckpointMsg::set_has_buffer() {
  _has_bits_[0] |= 0x00000002u;
}
void CheckpointMsg::clear_has_buffer() {
  _has_bits_[0] &= ~0x00000002u;
}
void CheckpointMsg::clear_buffer() {
  buffer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_buffer();
}
const ::std::string& CheckpointMsg::buffer() const {
  // @@protoc_insertion_point(field_get:phxpaxos.CheckpointMsg.Buffer)
  return buffer_.GetNoArena();
}
void CheckpointMsg::set_buffer(const ::std::string& value) {
  set_has_buffer();
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:phxpaxos.CheckpointMsg.Buffer)
}
#if LANG_CXX11
void CheckpointMsg::set_buffer(::std::string&& value) {
  set_has_buffer();
  buffer_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:phxpaxos.CheckpointMsg.Buffer)
}
#endif
void CheckpointMsg::set_buffer(const char* value) {
  set_has_buffer();
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phxpaxos.CheckpointMsg.Buffer)
}
void CheckpointMsg::set_buffer(const void* value, size_t size) {
  set_has_buffer();
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phxpaxos.CheckpointMsg.Buffer)
}
::std::string* CheckpointMsg::mutable_buffer() {
  set_has_buffer();
  // @@protoc_insertion_point(field_mutable:phxpaxos.CheckpointMsg.Buffer)
  return buffer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CheckpointMsg::release_buffer() {
  // @@protoc_insertion_point(field_release:phxpaxos.CheckpointMsg.Buffer)
  clear_has_buffer();
  return buffer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckpointMsg::set_allocated_buffer(::std::string* buffer) {
  if (buffer != NULL) {
    set_has_buffer();
  } else {
    clear_has_buffer();
  }
  buffer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buffer);
  // @@protoc_insertion_point(field_set_allocated:phxpaxos.CheckpointMsg.Buffer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AcceptorStateData::kInstanceIDFieldNumber;
const int AcceptorStateData::kPromiseIDFieldNumber;
const int AcceptorStateData::kPromiseNodeIDFieldNumber;
const int AcceptorStateData::kAcceptedIDFieldNumber;
const int AcceptorStateData::kAcceptedNodeIDFieldNumber;
const int AcceptorStateData::kAcceptedValueFieldNumber;
const int AcceptorStateData::kChecksumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AcceptorStateData::AcceptorStateData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_paxos_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:phxpaxos.AcceptorStateData)
}
AcceptorStateData::AcceptorStateData(const AcceptorStateData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  acceptedvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_acceptedvalue()) {
    acceptedvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.acceptedvalue_);
  }
  ::memcpy(&instanceid_, &from.instanceid_,
    reinterpret_cast<char*>(&checksum_) -
    reinterpret_cast<char*>(&instanceid_) + sizeof(checksum_));
  // @@protoc_insertion_point(copy_constructor:phxpaxos.AcceptorStateData)
}

void AcceptorStateData::SharedCtor() {
  _cached_size_ = 0;
  acceptedvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&instanceid_, 0, reinterpret_cast<char*>(&checksum_) -
    reinterpret_cast<char*>(&instanceid_) + sizeof(checksum_));
}

AcceptorStateData::~AcceptorStateData() {
  // @@protoc_insertion_point(destructor:phxpaxos.AcceptorStateData)
  SharedDtor();
}

void AcceptorStateData::SharedDtor() {
  acceptedvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AcceptorStateData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AcceptorStateData::descriptor() {
  protobuf_paxos_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_paxos_5fmsg_2eproto::file_level_metadata[3].descriptor;
}

const AcceptorStateData& AcceptorStateData::default_instance() {
  protobuf_paxos_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

AcceptorStateData* AcceptorStateData::New(::google::protobuf::Arena* arena) const {
  AcceptorStateData* n = new AcceptorStateData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AcceptorStateData::Clear() {
// @@protoc_insertion_point(message_clear_start:phxpaxos.AcceptorStateData)
  if (has_acceptedvalue()) {
    GOOGLE_DCHECK(!acceptedvalue_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*acceptedvalue_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 126u) {
    ::memset(&instanceid_, 0, reinterpret_cast<char*>(&checksum_) -
      reinterpret_cast<char*>(&instanceid_) + sizeof(checksum_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AcceptorStateData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:phxpaxos.AcceptorStateData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 InstanceID = 1;
      case 1: {
        if (tag == 8u) {
          set_has_instanceid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &instanceid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 PromiseID = 2;
      case 2: {
        if (tag == 16u) {
          set_has_promiseid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &promiseid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 PromiseNodeID = 3;
      case 3: {
        if (tag == 24u) {
          set_has_promisenodeid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &promisenodeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 AcceptedID = 4;
      case 4: {
        if (tag == 32u) {
          set_has_acceptedid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &acceptedid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 AcceptedNodeID = 5;
      case 5: {
        if (tag == 40u) {
          set_has_acceptednodeid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &acceptednodeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes AcceptedValue = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_acceptedvalue()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 Checksum = 7;
      case 7: {
        if (tag == 56u) {
          set_has_checksum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &checksum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phxpaxos.AcceptorStateData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phxpaxos.AcceptorStateData)
  return false;
#undef DO_
}

void AcceptorStateData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phxpaxos.AcceptorStateData)
  // required uint64 InstanceID = 1;
  if (has_instanceid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->instanceid(), output);
  }

  // required uint64 PromiseID = 2;
  if (has_promiseid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->promiseid(), output);
  }

  // required uint64 PromiseNodeID = 3;
  if (has_promisenodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->promisenodeid(), output);
  }

  // required uint64 AcceptedID = 4;
  if (has_acceptedid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->acceptedid(), output);
  }

  // required uint64 AcceptedNodeID = 5;
  if (has_acceptednodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->acceptednodeid(), output);
  }

  // required bytes AcceptedValue = 6;
  if (has_acceptedvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->acceptedvalue(), output);
  }

  // required uint32 Checksum = 7;
  if (has_checksum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->checksum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:phxpaxos.AcceptorStateData)
}

::google::protobuf::uint8* AcceptorStateData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:phxpaxos.AcceptorStateData)
  // required uint64 InstanceID = 1;
  if (has_instanceid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->instanceid(), target);
  }

  // required uint64 PromiseID = 2;
  if (has_promiseid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->promiseid(), target);
  }

  // required uint64 PromiseNodeID = 3;
  if (has_promisenodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->promisenodeid(), target);
  }

  // required uint64 AcceptedID = 4;
  if (has_acceptedid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->acceptedid(), target);
  }

  // required uint64 AcceptedNodeID = 5;
  if (has_acceptednodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->acceptednodeid(), target);
  }

  // required bytes AcceptedValue = 6;
  if (has_acceptedvalue()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->acceptedvalue(), target);
  }

  // required uint32 Checksum = 7;
  if (has_checksum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->checksum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:phxpaxos.AcceptorStateData)
  return target;
}

size_t AcceptorStateData::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:phxpaxos.AcceptorStateData)
  size_t total_size = 0;

  if (has_acceptedvalue()) {
    // required bytes AcceptedValue = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->acceptedvalue());
  }

  if (has_instanceid()) {
    // required uint64 InstanceID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->instanceid());
  }

  if (has_promiseid()) {
    // required uint64 PromiseID = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->promiseid());
  }

  if (has_promisenodeid()) {
    // required uint64 PromiseNodeID = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->promisenodeid());
  }

  if (has_acceptedid()) {
    // required uint64 AcceptedID = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->acceptedid());
  }

  if (has_acceptednodeid()) {
    // required uint64 AcceptedNodeID = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->acceptednodeid());
  }

  if (has_checksum()) {
    // required uint32 Checksum = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->checksum());
  }

  return total_size;
}
size_t AcceptorStateData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:phxpaxos.AcceptorStateData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000007f) ^ 0x0000007f) == 0) {  // All required fields are present.
    // required bytes AcceptedValue = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->acceptedvalue());

    // required uint64 InstanceID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->instanceid());

    // required uint64 PromiseID = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->promiseid());

    // required uint64 PromiseNodeID = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->promisenodeid());

    // required uint64 AcceptedID = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->acceptedid());

    // required uint64 AcceptedNodeID = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->acceptednodeid());

    // required uint32 Checksum = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->checksum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AcceptorStateData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:phxpaxos.AcceptorStateData)
  GOOGLE_DCHECK_NE(&from, this);
  const AcceptorStateData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AcceptorStateData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:phxpaxos.AcceptorStateData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:phxpaxos.AcceptorStateData)
    MergeFrom(*source);
  }
}

void AcceptorStateData::MergeFrom(const AcceptorStateData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phxpaxos.AcceptorStateData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 127u) {
    if (from.has_acceptedvalue()) {
      set_has_acceptedvalue();
      acceptedvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.acceptedvalue_);
    }
    if (from.has_instanceid()) {
      set_instanceid(from.instanceid());
    }
    if (from.has_promiseid()) {
      set_promiseid(from.promiseid());
    }
    if (from.has_promisenodeid()) {
      set_promisenodeid(from.promisenodeid());
    }
    if (from.has_acceptedid()) {
      set_acceptedid(from.acceptedid());
    }
    if (from.has_acceptednodeid()) {
      set_acceptednodeid(from.acceptednodeid());
    }
    if (from.has_checksum()) {
      set_checksum(from.checksum());
    }
  }
}

void AcceptorStateData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:phxpaxos.AcceptorStateData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AcceptorStateData::CopyFrom(const AcceptorStateData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phxpaxos.AcceptorStateData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AcceptorStateData::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007f) != 0x0000007f) return false;
  return true;
}

void AcceptorStateData::Swap(AcceptorStateData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AcceptorStateData::InternalSwap(AcceptorStateData* other) {
  acceptedvalue_.Swap(&other->acceptedvalue_);
  std::swap(instanceid_, other->instanceid_);
  std::swap(promiseid_, other->promiseid_);
  std::swap(promisenodeid_, other->promisenodeid_);
  std::swap(acceptedid_, other->acceptedid_);
  std::swap(acceptednodeid_, other->acceptednodeid_);
  std::swap(checksum_, other->checksum_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AcceptorStateData::GetMetadata() const {
  protobuf_paxos_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_paxos_5fmsg_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AcceptorStateData

// required uint64 InstanceID = 1;
bool AcceptorStateData::has_instanceid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AcceptorStateData::set_has_instanceid() {
  _has_bits_[0] |= 0x00000002u;
}
void AcceptorStateData::clear_has_instanceid() {
  _has_bits_[0] &= ~0x00000002u;
}
void AcceptorStateData::clear_instanceid() {
  instanceid_ = GOOGLE_ULONGLONG(0);
  clear_has_instanceid();
}
::google::protobuf::uint64 AcceptorStateData::instanceid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.AcceptorStateData.InstanceID)
  return instanceid_;
}
void AcceptorStateData::set_instanceid(::google::protobuf::uint64 value) {
  set_has_instanceid();
  instanceid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.AcceptorStateData.InstanceID)
}

// required uint64 PromiseID = 2;
bool AcceptorStateData::has_promiseid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void AcceptorStateData::set_has_promiseid() {
  _has_bits_[0] |= 0x00000004u;
}
void AcceptorStateData::clear_has_promiseid() {
  _has_bits_[0] &= ~0x00000004u;
}
void AcceptorStateData::clear_promiseid() {
  promiseid_ = GOOGLE_ULONGLONG(0);
  clear_has_promiseid();
}
::google::protobuf::uint64 AcceptorStateData::promiseid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.AcceptorStateData.PromiseID)
  return promiseid_;
}
void AcceptorStateData::set_promiseid(::google::protobuf::uint64 value) {
  set_has_promiseid();
  promiseid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.AcceptorStateData.PromiseID)
}

// required uint64 PromiseNodeID = 3;
bool AcceptorStateData::has_promisenodeid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void AcceptorStateData::set_has_promisenodeid() {
  _has_bits_[0] |= 0x00000008u;
}
void AcceptorStateData::clear_has_promisenodeid() {
  _has_bits_[0] &= ~0x00000008u;
}
void AcceptorStateData::clear_promisenodeid() {
  promisenodeid_ = GOOGLE_ULONGLONG(0);
  clear_has_promisenodeid();
}
::google::protobuf::uint64 AcceptorStateData::promisenodeid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.AcceptorStateData.PromiseNodeID)
  return promisenodeid_;
}
void AcceptorStateData::set_promisenodeid(::google::protobuf::uint64 value) {
  set_has_promisenodeid();
  promisenodeid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.AcceptorStateData.PromiseNodeID)
}

// required uint64 AcceptedID = 4;
bool AcceptorStateData::has_acceptedid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void AcceptorStateData::set_has_acceptedid() {
  _has_bits_[0] |= 0x00000010u;
}
void AcceptorStateData::clear_has_acceptedid() {
  _has_bits_[0] &= ~0x00000010u;
}
void AcceptorStateData::clear_acceptedid() {
  acceptedid_ = GOOGLE_ULONGLONG(0);
  clear_has_acceptedid();
}
::google::protobuf::uint64 AcceptorStateData::acceptedid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.AcceptorStateData.AcceptedID)
  return acceptedid_;
}
void AcceptorStateData::set_acceptedid(::google::protobuf::uint64 value) {
  set_has_acceptedid();
  acceptedid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.AcceptorStateData.AcceptedID)
}

// required uint64 AcceptedNodeID = 5;
bool AcceptorStateData::has_acceptednodeid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void AcceptorStateData::set_has_acceptednodeid() {
  _has_bits_[0] |= 0x00000020u;
}
void AcceptorStateData::clear_has_acceptednodeid() {
  _has_bits_[0] &= ~0x00000020u;
}
void AcceptorStateData::clear_acceptednodeid() {
  acceptednodeid_ = GOOGLE_ULONGLONG(0);
  clear_has_acceptednodeid();
}
::google::protobuf::uint64 AcceptorStateData::acceptednodeid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.AcceptorStateData.AcceptedNodeID)
  return acceptednodeid_;
}
void AcceptorStateData::set_acceptednodeid(::google::protobuf::uint64 value) {
  set_has_acceptednodeid();
  acceptednodeid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.AcceptorStateData.AcceptedNodeID)
}

// required bytes AcceptedValue = 6;
bool AcceptorStateData::has_acceptedvalue() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AcceptorStateData::set_has_acceptedvalue() {
  _has_bits_[0] |= 0x00000001u;
}
void AcceptorStateData::clear_has_acceptedvalue() {
  _has_bits_[0] &= ~0x00000001u;
}
void AcceptorStateData::clear_acceptedvalue() {
  acceptedvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_acceptedvalue();
}
const ::std::string& AcceptorStateData::acceptedvalue() const {
  // @@protoc_insertion_point(field_get:phxpaxos.AcceptorStateData.AcceptedValue)
  return acceptedvalue_.GetNoArena();
}
void AcceptorStateData::set_acceptedvalue(const ::std::string& value) {
  set_has_acceptedvalue();
  acceptedvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:phxpaxos.AcceptorStateData.AcceptedValue)
}
#if LANG_CXX11
void AcceptorStateData::set_acceptedvalue(::std::string&& value) {
  set_has_acceptedvalue();
  acceptedvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:phxpaxos.AcceptorStateData.AcceptedValue)
}
#endif
void AcceptorStateData::set_acceptedvalue(const char* value) {
  set_has_acceptedvalue();
  acceptedvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phxpaxos.AcceptorStateData.AcceptedValue)
}
void AcceptorStateData::set_acceptedvalue(const void* value, size_t size) {
  set_has_acceptedvalue();
  acceptedvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phxpaxos.AcceptorStateData.AcceptedValue)
}
::std::string* AcceptorStateData::mutable_acceptedvalue() {
  set_has_acceptedvalue();
  // @@protoc_insertion_point(field_mutable:phxpaxos.AcceptorStateData.AcceptedValue)
  return acceptedvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AcceptorStateData::release_acceptedvalue() {
  // @@protoc_insertion_point(field_release:phxpaxos.AcceptorStateData.AcceptedValue)
  clear_has_acceptedvalue();
  return acceptedvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AcceptorStateData::set_allocated_acceptedvalue(::std::string* acceptedvalue) {
  if (acceptedvalue != NULL) {
    set_has_acceptedvalue();
  } else {
    clear_has_acceptedvalue();
  }
  acceptedvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), acceptedvalue);
  // @@protoc_insertion_point(field_set_allocated:phxpaxos.AcceptorStateData.AcceptedValue)
}

// required uint32 Checksum = 7;
bool AcceptorStateData::has_checksum() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void AcceptorStateData::set_has_checksum() {
  _has_bits_[0] |= 0x00000040u;
}
void AcceptorStateData::clear_has_checksum() {
  _has_bits_[0] &= ~0x00000040u;
}
void AcceptorStateData::clear_checksum() {
  checksum_ = 0u;
  clear_has_checksum();
}
::google::protobuf::uint32 AcceptorStateData::checksum() const {
  // @@protoc_insertion_point(field_get:phxpaxos.AcceptorStateData.Checksum)
  return checksum_;
}
void AcceptorStateData::set_checksum(::google::protobuf::uint32 value) {
  set_has_checksum();
  checksum_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.AcceptorStateData.Checksum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PaxosNodeInfo::kRidFieldNumber;
const int PaxosNodeInfo::kNodeidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PaxosNodeInfo::PaxosNodeInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_paxos_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:phxpaxos.PaxosNodeInfo)
}
PaxosNodeInfo::PaxosNodeInfo(const PaxosNodeInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&rid_, &from.rid_,
    reinterpret_cast<char*>(&nodeid_) -
    reinterpret_cast<char*>(&rid_) + sizeof(nodeid_));
  // @@protoc_insertion_point(copy_constructor:phxpaxos.PaxosNodeInfo)
}

void PaxosNodeInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&rid_, 0, reinterpret_cast<char*>(&nodeid_) -
    reinterpret_cast<char*>(&rid_) + sizeof(nodeid_));
}

PaxosNodeInfo::~PaxosNodeInfo() {
  // @@protoc_insertion_point(destructor:phxpaxos.PaxosNodeInfo)
  SharedDtor();
}

void PaxosNodeInfo::SharedDtor() {
}

void PaxosNodeInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PaxosNodeInfo::descriptor() {
  protobuf_paxos_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_paxos_5fmsg_2eproto::file_level_metadata[4].descriptor;
}

const PaxosNodeInfo& PaxosNodeInfo::default_instance() {
  protobuf_paxos_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PaxosNodeInfo* PaxosNodeInfo::New(::google::protobuf::Arena* arena) const {
  PaxosNodeInfo* n = new PaxosNodeInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PaxosNodeInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:phxpaxos.PaxosNodeInfo)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&rid_, 0, reinterpret_cast<char*>(&nodeid_) -
      reinterpret_cast<char*>(&rid_) + sizeof(nodeid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PaxosNodeInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:phxpaxos.PaxosNodeInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 Rid = 1;
      case 1: {
        if (tag == 8u) {
          set_has_rid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 Nodeid = 2;
      case 2: {
        if (tag == 16u) {
          set_has_nodeid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &nodeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phxpaxos.PaxosNodeInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phxpaxos.PaxosNodeInfo)
  return false;
#undef DO_
}

void PaxosNodeInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phxpaxos.PaxosNodeInfo)
  // required uint64 Rid = 1;
  if (has_rid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->rid(), output);
  }

  // required uint64 Nodeid = 2;
  if (has_nodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->nodeid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:phxpaxos.PaxosNodeInfo)
}

::google::protobuf::uint8* PaxosNodeInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:phxpaxos.PaxosNodeInfo)
  // required uint64 Rid = 1;
  if (has_rid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->rid(), target);
  }

  // required uint64 Nodeid = 2;
  if (has_nodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->nodeid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:phxpaxos.PaxosNodeInfo)
  return target;
}

size_t PaxosNodeInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:phxpaxos.PaxosNodeInfo)
  size_t total_size = 0;

  if (has_rid()) {
    // required uint64 Rid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->rid());
  }

  if (has_nodeid()) {
    // required uint64 Nodeid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->nodeid());
  }

  return total_size;
}
size_t PaxosNodeInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:phxpaxos.PaxosNodeInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 Rid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->rid());

    // required uint64 Nodeid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->nodeid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PaxosNodeInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:phxpaxos.PaxosNodeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const PaxosNodeInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PaxosNodeInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:phxpaxos.PaxosNodeInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:phxpaxos.PaxosNodeInfo)
    MergeFrom(*source);
  }
}

void PaxosNodeInfo::MergeFrom(const PaxosNodeInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phxpaxos.PaxosNodeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_rid()) {
      set_rid(from.rid());
    }
    if (from.has_nodeid()) {
      set_nodeid(from.nodeid());
    }
  }
}

void PaxosNodeInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:phxpaxos.PaxosNodeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaxosNodeInfo::CopyFrom(const PaxosNodeInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phxpaxos.PaxosNodeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaxosNodeInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void PaxosNodeInfo::Swap(PaxosNodeInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PaxosNodeInfo::InternalSwap(PaxosNodeInfo* other) {
  std::swap(rid_, other->rid_);
  std::swap(nodeid_, other->nodeid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PaxosNodeInfo::GetMetadata() const {
  protobuf_paxos_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_paxos_5fmsg_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PaxosNodeInfo

// required uint64 Rid = 1;
bool PaxosNodeInfo::has_rid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PaxosNodeInfo::set_has_rid() {
  _has_bits_[0] |= 0x00000001u;
}
void PaxosNodeInfo::clear_has_rid() {
  _has_bits_[0] &= ~0x00000001u;
}
void PaxosNodeInfo::clear_rid() {
  rid_ = GOOGLE_ULONGLONG(0);
  clear_has_rid();
}
::google::protobuf::uint64 PaxosNodeInfo::rid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosNodeInfo.Rid)
  return rid_;
}
void PaxosNodeInfo::set_rid(::google::protobuf::uint64 value) {
  set_has_rid();
  rid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosNodeInfo.Rid)
}

// required uint64 Nodeid = 2;
bool PaxosNodeInfo::has_nodeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PaxosNodeInfo::set_has_nodeid() {
  _has_bits_[0] |= 0x00000002u;
}
void PaxosNodeInfo::clear_has_nodeid() {
  _has_bits_[0] &= ~0x00000002u;
}
void PaxosNodeInfo::clear_nodeid() {
  nodeid_ = GOOGLE_ULONGLONG(0);
  clear_has_nodeid();
}
::google::protobuf::uint64 PaxosNodeInfo::nodeid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosNodeInfo.Nodeid)
  return nodeid_;
}
void PaxosNodeInfo::set_nodeid(::google::protobuf::uint64 value) {
  set_has_nodeid();
  nodeid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosNodeInfo.Nodeid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SystemVariables::kGidFieldNumber;
const int SystemVariables::kMemberShipFieldNumber;
const int SystemVariables::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SystemVariables::SystemVariables()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_paxos_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:phxpaxos.SystemVariables)
}
SystemVariables::SystemVariables(const SystemVariables& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      membership_(from.membership_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&gid_, &from.gid_,
    reinterpret_cast<char*>(&version_) -
    reinterpret_cast<char*>(&gid_) + sizeof(version_));
  // @@protoc_insertion_point(copy_constructor:phxpaxos.SystemVariables)
}

void SystemVariables::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&gid_, 0, reinterpret_cast<char*>(&version_) -
    reinterpret_cast<char*>(&gid_) + sizeof(version_));
}

SystemVariables::~SystemVariables() {
  // @@protoc_insertion_point(destructor:phxpaxos.SystemVariables)
  SharedDtor();
}

void SystemVariables::SharedDtor() {
}

void SystemVariables::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SystemVariables::descriptor() {
  protobuf_paxos_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_paxos_5fmsg_2eproto::file_level_metadata[5].descriptor;
}

const SystemVariables& SystemVariables::default_instance() {
  protobuf_paxos_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SystemVariables* SystemVariables::New(::google::protobuf::Arena* arena) const {
  SystemVariables* n = new SystemVariables;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SystemVariables::Clear() {
// @@protoc_insertion_point(message_clear_start:phxpaxos.SystemVariables)
  membership_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&gid_, 0, reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&gid_) + sizeof(version_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SystemVariables::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:phxpaxos.SystemVariables)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 Gid = 1;
      case 1: {
        if (tag == 8u) {
          set_has_gid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .phxpaxos.PaxosNodeInfo MemberShip = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_membership()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // required uint64 Version = 3;
      case 3: {
        if (tag == 24u) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phxpaxos.SystemVariables)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phxpaxos.SystemVariables)
  return false;
#undef DO_
}

void SystemVariables::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phxpaxos.SystemVariables)
  // required uint64 Gid = 1;
  if (has_gid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->gid(), output);
  }

  // repeated .phxpaxos.PaxosNodeInfo MemberShip = 2;
  for (unsigned int i = 0, n = this->membership_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->membership(i), output);
  }

  // required uint64 Version = 3;
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->version(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:phxpaxos.SystemVariables)
}

::google::protobuf::uint8* SystemVariables::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:phxpaxos.SystemVariables)
  // required uint64 Gid = 1;
  if (has_gid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->gid(), target);
  }

  // repeated .phxpaxos.PaxosNodeInfo MemberShip = 2;
  for (unsigned int i = 0, n = this->membership_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->membership(i), false, target);
  }

  // required uint64 Version = 3;
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->version(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:phxpaxos.SystemVariables)
  return target;
}

size_t SystemVariables::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:phxpaxos.SystemVariables)
  size_t total_size = 0;

  if (has_gid()) {
    // required uint64 Gid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gid());
  }

  if (has_version()) {
    // required uint64 Version = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->version());
  }

  return total_size;
}
size_t SystemVariables::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:phxpaxos.SystemVariables)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 Gid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gid());

    // required uint64 Version = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->version());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .phxpaxos.PaxosNodeInfo MemberShip = 2;
  {
    unsigned int count = this->membership_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->membership(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SystemVariables::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:phxpaxos.SystemVariables)
  GOOGLE_DCHECK_NE(&from, this);
  const SystemVariables* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SystemVariables>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:phxpaxos.SystemVariables)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:phxpaxos.SystemVariables)
    MergeFrom(*source);
  }
}

void SystemVariables::MergeFrom(const SystemVariables& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phxpaxos.SystemVariables)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  membership_.MergeFrom(from.membership_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_gid()) {
      set_gid(from.gid());
    }
    if (from.has_version()) {
      set_version(from.version());
    }
  }
}

void SystemVariables::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:phxpaxos.SystemVariables)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SystemVariables::CopyFrom(const SystemVariables& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phxpaxos.SystemVariables)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemVariables::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->membership())) return false;
  return true;
}

void SystemVariables::Swap(SystemVariables* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SystemVariables::InternalSwap(SystemVariables* other) {
  membership_.UnsafeArenaSwap(&other->membership_);
  std::swap(gid_, other->gid_);
  std::swap(version_, other->version_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SystemVariables::GetMetadata() const {
  protobuf_paxos_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_paxos_5fmsg_2eproto::file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SystemVariables

// required uint64 Gid = 1;
bool SystemVariables::has_gid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SystemVariables::set_has_gid() {
  _has_bits_[0] |= 0x00000001u;
}
void SystemVariables::clear_has_gid() {
  _has_bits_[0] &= ~0x00000001u;
}
void SystemVariables::clear_gid() {
  gid_ = GOOGLE_ULONGLONG(0);
  clear_has_gid();
}
::google::protobuf::uint64 SystemVariables::gid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.SystemVariables.Gid)
  return gid_;
}
void SystemVariables::set_gid(::google::protobuf::uint64 value) {
  set_has_gid();
  gid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.SystemVariables.Gid)
}

// repeated .phxpaxos.PaxosNodeInfo MemberShip = 2;
int SystemVariables::membership_size() const {
  return membership_.size();
}
void SystemVariables::clear_membership() {
  membership_.Clear();
}
const ::phxpaxos::PaxosNodeInfo& SystemVariables::membership(int index) const {
  // @@protoc_insertion_point(field_get:phxpaxos.SystemVariables.MemberShip)
  return membership_.Get(index);
}
::phxpaxos::PaxosNodeInfo* SystemVariables::mutable_membership(int index) {
  // @@protoc_insertion_point(field_mutable:phxpaxos.SystemVariables.MemberShip)
  return membership_.Mutable(index);
}
::phxpaxos::PaxosNodeInfo* SystemVariables::add_membership() {
  // @@protoc_insertion_point(field_add:phxpaxos.SystemVariables.MemberShip)
  return membership_.Add();
}
::google::protobuf::RepeatedPtrField< ::phxpaxos::PaxosNodeInfo >*
SystemVariables::mutable_membership() {
  // @@protoc_insertion_point(field_mutable_list:phxpaxos.SystemVariables.MemberShip)
  return &membership_;
}
const ::google::protobuf::RepeatedPtrField< ::phxpaxos::PaxosNodeInfo >&
SystemVariables::membership() const {
  // @@protoc_insertion_point(field_list:phxpaxos.SystemVariables.MemberShip)
  return membership_;
}

// required uint64 Version = 3;
bool SystemVariables::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SystemVariables::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
void SystemVariables::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
void SystemVariables::clear_version() {
  version_ = GOOGLE_ULONGLONG(0);
  clear_has_version();
}
::google::protobuf::uint64 SystemVariables::version() const {
  // @@protoc_insertion_point(field_get:phxpaxos.SystemVariables.Version)
  return version_;
}
void SystemVariables::set_version(::google::protobuf::uint64 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.SystemVariables.Version)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MasterVariables::kMasterNodeidFieldNumber;
const int MasterVariables::kVersionFieldNumber;
const int MasterVariables::kLeaseTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MasterVariables::MasterVariables()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_paxos_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:phxpaxos.MasterVariables)
}
MasterVariables::MasterVariables(const MasterVariables& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&masternodeid_, &from.masternodeid_,
    reinterpret_cast<char*>(&leasetime_) -
    reinterpret_cast<char*>(&masternodeid_) + sizeof(leasetime_));
  // @@protoc_insertion_point(copy_constructor:phxpaxos.MasterVariables)
}

void MasterVariables::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&masternodeid_, 0, reinterpret_cast<char*>(&leasetime_) -
    reinterpret_cast<char*>(&masternodeid_) + sizeof(leasetime_));
}

MasterVariables::~MasterVariables() {
  // @@protoc_insertion_point(destructor:phxpaxos.MasterVariables)
  SharedDtor();
}

void MasterVariables::SharedDtor() {
}

void MasterVariables::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MasterVariables::descriptor() {
  protobuf_paxos_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_paxos_5fmsg_2eproto::file_level_metadata[6].descriptor;
}

const MasterVariables& MasterVariables::default_instance() {
  protobuf_paxos_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

MasterVariables* MasterVariables::New(::google::protobuf::Arena* arena) const {
  MasterVariables* n = new MasterVariables;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MasterVariables::Clear() {
// @@protoc_insertion_point(message_clear_start:phxpaxos.MasterVariables)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&masternodeid_, 0, reinterpret_cast<char*>(&leasetime_) -
      reinterpret_cast<char*>(&masternodeid_) + sizeof(leasetime_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MasterVariables::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:phxpaxos.MasterVariables)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 MasterNodeid = 1;
      case 1: {
        if (tag == 8u) {
          set_has_masternodeid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &masternodeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 Version = 2;
      case 2: {
        if (tag == 16u) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 LeaseTime = 3;
      case 3: {
        if (tag == 24u) {
          set_has_leasetime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &leasetime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phxpaxos.MasterVariables)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phxpaxos.MasterVariables)
  return false;
#undef DO_
}

void MasterVariables::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phxpaxos.MasterVariables)
  // required uint64 MasterNodeid = 1;
  if (has_masternodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->masternodeid(), output);
  }

  // required uint64 Version = 2;
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->version(), output);
  }

  // required uint32 LeaseTime = 3;
  if (has_leasetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->leasetime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:phxpaxos.MasterVariables)
}

::google::protobuf::uint8* MasterVariables::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:phxpaxos.MasterVariables)
  // required uint64 MasterNodeid = 1;
  if (has_masternodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->masternodeid(), target);
  }

  // required uint64 Version = 2;
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->version(), target);
  }

  // required uint32 LeaseTime = 3;
  if (has_leasetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->leasetime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:phxpaxos.MasterVariables)
  return target;
}

size_t MasterVariables::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:phxpaxos.MasterVariables)
  size_t total_size = 0;

  if (has_masternodeid()) {
    // required uint64 MasterNodeid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->masternodeid());
  }

  if (has_version()) {
    // required uint64 Version = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->version());
  }

  if (has_leasetime()) {
    // required uint32 LeaseTime = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->leasetime());
  }

  return total_size;
}
size_t MasterVariables::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:phxpaxos.MasterVariables)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required uint64 MasterNodeid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->masternodeid());

    // required uint64 Version = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->version());

    // required uint32 LeaseTime = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->leasetime());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MasterVariables::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:phxpaxos.MasterVariables)
  GOOGLE_DCHECK_NE(&from, this);
  const MasterVariables* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MasterVariables>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:phxpaxos.MasterVariables)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:phxpaxos.MasterVariables)
    MergeFrom(*source);
  }
}

void MasterVariables::MergeFrom(const MasterVariables& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phxpaxos.MasterVariables)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 7u) {
    if (from.has_masternodeid()) {
      set_masternodeid(from.masternodeid());
    }
    if (from.has_version()) {
      set_version(from.version());
    }
    if (from.has_leasetime()) {
      set_leasetime(from.leasetime());
    }
  }
}

void MasterVariables::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:phxpaxos.MasterVariables)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MasterVariables::CopyFrom(const MasterVariables& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phxpaxos.MasterVariables)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MasterVariables::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void MasterVariables::Swap(MasterVariables* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MasterVariables::InternalSwap(MasterVariables* other) {
  std::swap(masternodeid_, other->masternodeid_);
  std::swap(version_, other->version_);
  std::swap(leasetime_, other->leasetime_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MasterVariables::GetMetadata() const {
  protobuf_paxos_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_paxos_5fmsg_2eproto::file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MasterVariables

// required uint64 MasterNodeid = 1;
bool MasterVariables::has_masternodeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MasterVariables::set_has_masternodeid() {
  _has_bits_[0] |= 0x00000001u;
}
void MasterVariables::clear_has_masternodeid() {
  _has_bits_[0] &= ~0x00000001u;
}
void MasterVariables::clear_masternodeid() {
  masternodeid_ = GOOGLE_ULONGLONG(0);
  clear_has_masternodeid();
}
::google::protobuf::uint64 MasterVariables::masternodeid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.MasterVariables.MasterNodeid)
  return masternodeid_;
}
void MasterVariables::set_masternodeid(::google::protobuf::uint64 value) {
  set_has_masternodeid();
  masternodeid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.MasterVariables.MasterNodeid)
}

// required uint64 Version = 2;
bool MasterVariables::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MasterVariables::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
void MasterVariables::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
void MasterVariables::clear_version() {
  version_ = GOOGLE_ULONGLONG(0);
  clear_has_version();
}
::google::protobuf::uint64 MasterVariables::version() const {
  // @@protoc_insertion_point(field_get:phxpaxos.MasterVariables.Version)
  return version_;
}
void MasterVariables::set_version(::google::protobuf::uint64 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.MasterVariables.Version)
}

// required uint32 LeaseTime = 3;
bool MasterVariables::has_leasetime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void MasterVariables::set_has_leasetime() {
  _has_bits_[0] |= 0x00000004u;
}
void MasterVariables::clear_has_leasetime() {
  _has_bits_[0] &= ~0x00000004u;
}
void MasterVariables::clear_leasetime() {
  leasetime_ = 0u;
  clear_has_leasetime();
}
::google::protobuf::uint32 MasterVariables::leasetime() const {
  // @@protoc_insertion_point(field_get:phxpaxos.MasterVariables.LeaseTime)
  return leasetime_;
}
void MasterVariables::set_leasetime(::google::protobuf::uint32 value) {
  set_has_leasetime();
  leasetime_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.MasterVariables.LeaseTime)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PaxosValue::kSMIDFieldNumber;
const int PaxosValue::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PaxosValue::PaxosValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_paxos_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:phxpaxos.PaxosValue)
}
PaxosValue::PaxosValue(const PaxosValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  smid_ = from.smid_;
  // @@protoc_insertion_point(copy_constructor:phxpaxos.PaxosValue)
}

void PaxosValue::SharedCtor() {
  _cached_size_ = 0;
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smid_ = 0;
}

PaxosValue::~PaxosValue() {
  // @@protoc_insertion_point(destructor:phxpaxos.PaxosValue)
  SharedDtor();
}

void PaxosValue::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PaxosValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PaxosValue::descriptor() {
  protobuf_paxos_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_paxos_5fmsg_2eproto::file_level_metadata[7].descriptor;
}

const PaxosValue& PaxosValue::default_instance() {
  protobuf_paxos_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

PaxosValue* PaxosValue::New(::google::protobuf::Arena* arena) const {
  PaxosValue* n = new PaxosValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PaxosValue::Clear() {
// @@protoc_insertion_point(message_clear_start:phxpaxos.PaxosValue)
  if (has_value()) {
    GOOGLE_DCHECK(!value_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*value_.UnsafeRawStringPointer())->clear();
  }
  smid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PaxosValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:phxpaxos.PaxosValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 SMID = 1;
      case 1: {
        if (tag == 8u) {
          set_has_smid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &smid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes Value = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phxpaxos.PaxosValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phxpaxos.PaxosValue)
  return false;
#undef DO_
}

void PaxosValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phxpaxos.PaxosValue)
  // required int32 SMID = 1;
  if (has_smid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->smid(), output);
  }

  // required bytes Value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:phxpaxos.PaxosValue)
}

::google::protobuf::uint8* PaxosValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:phxpaxos.PaxosValue)
  // required int32 SMID = 1;
  if (has_smid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->smid(), target);
  }

  // required bytes Value = 2;
  if (has_value()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:phxpaxos.PaxosValue)
  return target;
}

size_t PaxosValue::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:phxpaxos.PaxosValue)
  size_t total_size = 0;

  if (has_value()) {
    // required bytes Value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  if (has_smid()) {
    // required int32 SMID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->smid());
  }

  return total_size;
}
size_t PaxosValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:phxpaxos.PaxosValue)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes Value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());

    // required int32 SMID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->smid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PaxosValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:phxpaxos.PaxosValue)
  GOOGLE_DCHECK_NE(&from, this);
  const PaxosValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PaxosValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:phxpaxos.PaxosValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:phxpaxos.PaxosValue)
    MergeFrom(*source);
  }
}

void PaxosValue::MergeFrom(const PaxosValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phxpaxos.PaxosValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_value()) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
    if (from.has_smid()) {
      set_smid(from.smid());
    }
  }
}

void PaxosValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:phxpaxos.PaxosValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaxosValue::CopyFrom(const PaxosValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phxpaxos.PaxosValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaxosValue::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void PaxosValue::Swap(PaxosValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PaxosValue::InternalSwap(PaxosValue* other) {
  value_.Swap(&other->value_);
  std::swap(smid_, other->smid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PaxosValue::GetMetadata() const {
  protobuf_paxos_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_paxos_5fmsg_2eproto::file_level_metadata[7];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PaxosValue

// required int32 SMID = 1;
bool PaxosValue::has_smid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PaxosValue::set_has_smid() {
  _has_bits_[0] |= 0x00000002u;
}
void PaxosValue::clear_has_smid() {
  _has_bits_[0] &= ~0x00000002u;
}
void PaxosValue::clear_smid() {
  smid_ = 0;
  clear_has_smid();
}
::google::protobuf::int32 PaxosValue::smid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosValue.SMID)
  return smid_;
}
void PaxosValue::set_smid(::google::protobuf::int32 value) {
  set_has_smid();
  smid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosValue.SMID)
}

// required bytes Value = 2;
bool PaxosValue::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PaxosValue::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
void PaxosValue::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
void PaxosValue::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
const ::std::string& PaxosValue::value() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosValue.Value)
  return value_.GetNoArena();
}
void PaxosValue::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosValue.Value)
}
#if LANG_CXX11
void PaxosValue::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:phxpaxos.PaxosValue.Value)
}
#endif
void PaxosValue::set_value(const char* value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phxpaxos.PaxosValue.Value)
}
void PaxosValue::set_value(const void* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phxpaxos.PaxosValue.Value)
}
::std::string* PaxosValue::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:phxpaxos.PaxosValue.Value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PaxosValue::release_value() {
  // @@protoc_insertion_point(field_release:phxpaxos.PaxosValue.Value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PaxosValue::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:phxpaxos.PaxosValue.Value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BatchPaxosValues::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BatchPaxosValues::BatchPaxosValues()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_paxos_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:phxpaxos.BatchPaxosValues)
}
BatchPaxosValues::BatchPaxosValues(const BatchPaxosValues& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      values_(from.values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:phxpaxos.BatchPaxosValues)
}

void BatchPaxosValues::SharedCtor() {
  _cached_size_ = 0;
}

BatchPaxosValues::~BatchPaxosValues() {
  // @@protoc_insertion_point(destructor:phxpaxos.BatchPaxosValues)
  SharedDtor();
}

void BatchPaxosValues::SharedDtor() {
}

void BatchPaxosValues::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BatchPaxosValues::descriptor() {
  protobuf_paxos_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_paxos_5fmsg_2eproto::file_level_metadata[8].descriptor;
}

const BatchPaxosValues& BatchPaxosValues::default_instance() {
  protobuf_paxos_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

BatchPaxosValues* BatchPaxosValues::New(::google::protobuf::Arena* arena) const {
  BatchPaxosValues* n = new BatchPaxosValues;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BatchPaxosValues::Clear() {
// @@protoc_insertion_point(message_clear_start:phxpaxos.BatchPaxosValues)
  values_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BatchPaxosValues::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:phxpaxos.BatchPaxosValues)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .phxpaxos.PaxosValue Values = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_values()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phxpaxos.BatchPaxosValues)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phxpaxos.BatchPaxosValues)
  return false;
#undef DO_
}

void BatchPaxosValues::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phxpaxos.BatchPaxosValues)
  // repeated .phxpaxos.PaxosValue Values = 1;
  for (unsigned int i = 0, n = this->values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->values(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:phxpaxos.BatchPaxosValues)
}

::google::protobuf::uint8* BatchPaxosValues::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:phxpaxos.BatchPaxosValues)
  // repeated .phxpaxos.PaxosValue Values = 1;
  for (unsigned int i = 0, n = this->values_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->values(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:phxpaxos.BatchPaxosValues)
  return target;
}

size_t BatchPaxosValues::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:phxpaxos.BatchPaxosValues)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .phxpaxos.PaxosValue Values = 1;
  {
    unsigned int count = this->values_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->values(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BatchPaxosValues::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:phxpaxos.BatchPaxosValues)
  GOOGLE_DCHECK_NE(&from, this);
  const BatchPaxosValues* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BatchPaxosValues>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:phxpaxos.BatchPaxosValues)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:phxpaxos.BatchPaxosValues)
    MergeFrom(*source);
  }
}

void BatchPaxosValues::MergeFrom(const BatchPaxosValues& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phxpaxos.BatchPaxosValues)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  values_.MergeFrom(from.values_);
}

void BatchPaxosValues::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:phxpaxos.BatchPaxosValues)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BatchPaxosValues::CopyFrom(const BatchPaxosValues& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phxpaxos.BatchPaxosValues)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchPaxosValues::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->values())) return false;
  return true;
}

void BatchPaxosValues::Swap(BatchPaxosValues* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BatchPaxosValues::InternalSwap(BatchPaxosValues* other) {
  values_.UnsafeArenaSwap(&other->values_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BatchPaxosValues::GetMetadata() const {
  protobuf_paxos_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_paxos_5fmsg_2eproto::file_level_metadata[8];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BatchPaxosValues

// repeated .phxpaxos.PaxosValue Values = 1;
int BatchPaxosValues::values_size() const {
  return values_.size();
}
void BatchPaxosValues::clear_values() {
  values_.Clear();
}
const ::phxpaxos::PaxosValue& BatchPaxosValues::values(int index) const {
  // @@protoc_insertion_point(field_get:phxpaxos.BatchPaxosValues.Values)
  return values_.Get(index);
}
::phxpaxos::PaxosValue* BatchPaxosValues::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:phxpaxos.BatchPaxosValues.Values)
  return values_.Mutable(index);
}
::phxpaxos::PaxosValue* BatchPaxosValues::add_values() {
  // @@protoc_insertion_point(field_add:phxpaxos.BatchPaxosValues.Values)
  return values_.Add();
}
::google::protobuf::RepeatedPtrField< ::phxpaxos::PaxosValue >*
BatchPaxosValues::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:phxpaxos.BatchPaxosValues.Values)
  return &values_;
}
const ::google::protobuf::RepeatedPtrField< ::phxpaxos::PaxosValue >&
BatchPaxosValues::values() const {
  // @@protoc_insertion_point(field_list:phxpaxos.BatchPaxosValues.Values)
  return values_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace phxpaxos

// @@protoc_insertion_point(global_scope)
